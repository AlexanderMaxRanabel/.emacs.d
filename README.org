#+TITLE:  Likhon's GNU Emacs Configuration
#+AUTHOR: Likhon Barai
#+EMAIL:  likhonhere007@gmail.com
#+DATE:   2022 Nov 19
#+TAGS:   emacs

[[https://www.gnu.org/licenses/gpl-3.0.txt][https://img.shields.io/badge/license-GPL_3-green.svg?style=flat&logo=appveyor]]
[[https://github.com/ellerbrock/open-source-badges/][https://badges.frapsoft.com/os/v1/open-source.png?v=103]]
#+begin_quote
“An infinite number of monkeys typing into GNU emacs would never make a good program.”\\
——— Linus Torvalds
#+end_quote

* Table of Contents                                                     :TOC:
- [[#about][About]]
  - [[#about-readme][About README]]
- [[#installation][Installation]]
  - [[#further-updates][Further Updates]]
  - [[#contribution][Contribution]]
  - [[#special-thanks][Special Thanks]]
- [[#prerequisites][Prerequisites]]
- [[#recommendation][Recommendation]]
  - [[#replace-capslock-with-ctrl][Replace CapsLock with CTRL]]
- [[#:dizzy:-ask-me-anything!-✨][Ask Me Anything]]

* About
Emacs changes how you *think* about programming.

Emacs is *totally introspectable*. You can always find out 'what code runs when I press this button?'.

Emacs is an *incremental programming environment*. There's no edit-compile-run cycle. There isn't even an edit-run cycle. You can execute snippets of code and gradually turn them into a finished project. There's no distinction between your editor and your interpreter.

Emacs is a *mutable environment*. You can set variables, tweak functions with advice, or redefine entire functions. Nothing is off-limits.

Emacs provides *functionality without applications*. Rather than separate applications, functionality is all integrated into your Emacs instance. Amazingly, this works. Ever wanted to use the same snippet tool for writing C++ classes as well as emails?

Emacs is full of *incredible software concepts that haven't hit the mainstream yet*. For example:

-   Many platforms have a single item clipboard. Emacs has an *infinite clipboard*.
-   If you undo a change, and then continue editing, you can't redo the original change. Emacs allows *undoing to any historical state*, even allowing tree-based exploration of history.
-   Emacs supports a *reverse variable search*: you can find variables with a given value.
-   You can perform *structural editing* of code, allowing you to make changes without breaking syntax. This works for lisps (paredit) and non-lisps (smartparens).
-   Many applications use a modal GUI: for example, you can't do other edits during a find-and-replace operation. Emacs provides *recursive editing* that allow you to suspend what you're currently doing, perform other edits, then continue the original task.

Emacs has a *documentation culture*. Emacs includes a usage manual, a lisp programming manual, pervasive docstrings and even an interactive tutorial.

Emacs has a *broad ecosystem*. If you want to edit code in a niche language, there's probably an Emacs package for it.

Emacs doesn't have a monopoly on good ideas, and there are other great tools out there. Nonetheless, we believe the [[https://i.stack.imgur.com/7Cu9Z.jpg][Emacs learning curve]] pays off.

This beautifully written *About EMACS* section credits to [[https://github.com/remacs/remacs][Remacs]].

** About README
Welcome to the /Emacs Of Dreams/. Wait no, I meant the *Emacs Operating System*

[[./image-dired/ss1.png]][[./image-dired/ss2.png]]
[[./image-dired/ss3.png]][[./image-dired/ss4.png]]

This repository contains my personal configuration for =GNU Emacs= that I use on
the daily and port around from system to system with me.

The configuration depends on [[file:init.el][init.el]]  and [[file:early-init.el][early-init.el]] (sets up a few initial GUI settings), bootstraps [[https://github.com/jwiegley/use-package][use-package]]. and loads [[file:init.el][init.el]], which is where the majority of the configuration magic happens.

This configuration uses default-style keybindings and known to work with GNU
Emacs 27.1 and later.

#+html: <p><img alt="GitHub repo size" align="right" src="https://img.shields.io/github/repo-size/Likhon-baRoy/.emacs.d?color=blue&logo=github&style=for-the-badge"></p>

* Installation
[[https://GitHub.com/Likhon-baRoy/][http://ForTheBadge.com/images/badges/built-with-swag.svg]]

1. Install [[https://www.gnu.org/software/emacs/][GNU Emacs]].
2. Delete =~/.emacs= or =~/.emacs.d=, if you already have it.
3. Clone this repo to =HOME= or =~/= path using git and update all the submodules.\\
   /Run this snippets on your terminal:/
#+begin_src
cd ~
git clone https://github.com/Likhon-baRoy/.emacs.d.git
cd.emacs.d
#+end_src
4. Ensure a stable connection to Melpa Packages, then open Emacs.
5. Enter =y= when prompted with =Auto-update packages now?=, wait for all packages to install. (Ignore the warnings on the first launch.)
6. In your favorite browser, Ctrl-f Prerequisite through this README and follow the Prerequisite instructions.
7. Restart Emacs and Start using your *Dream Emacs*! :tada:

** Further Updates
I will be updating My-EMACS from time to time, it is best to =git pull= once a while to stay up to date.

Please also execute ~git submodule update --recursive --remote~ to sync with all the submodules.

** Contribution
If you spotted a bug or you have any suggestions, please fill in an issue. If you have something to fix, feel free to create a pull request.

** Special Thanks
Everyone starts somewhere, and I started here.

* Prerequisites
*** All the icons
Lets add a package. A good one to start with is *all-the-icons*. This installs a bunch of *icons* and *fonts* - no more blank squares anywhere.

This particular package has a one-time setup step - go ahead and execute now so you never have to worry about it again.

Do the following after opening your Emacs:
1. press =M-x=
2. now type: =all-the-icons-install-fonts=
3. press /<Return>/Enter/ key to install.

You should be good to go!

Also this project relies on the following list of applications:

- [[http://ctags.sourceforge.net][Exuberant Ctags (=ctags=)]]
- [[https://github.com/sharkdp/fd][Fast and user-friendly alternative to find (=fd=)]]
- [[https://www.gnu.org/software/global][GNU GLOBAL (=global=)]]
- [[https://git-scm.com][Git (=git=)]]
- [[https://www.gnupg.org][GnuPG (=gpg=)]]
- [[https://hunspell.github.io][Hunspell (=hunspell=)]] with [[https://stackoverflow.com/a/9436234/1661465][dictionaries]]
- [[https://www.gnu.org/software/idutils/][ID Utils (=mkid=, =lid=, =fid=, =fnid=, =xtokid=)]]
- [[https://pandoc.org][Pandoc (=pandoc=)]]
- [[https://www.passwordstore.org][Password Store (=pass=)]]
- [[http://www.sbcl.org][Steel Bank Common Lisp (=sbcl=)]]
- [[https://github.com/BurntSushi/ripgrep][ripgrep (=rg=)]]

* Recommendations
Here are some general recommendations on Emacs usage that you might find helpful:

** Replace CapsLock with CTRL
Most people don't use the CapsLock key (unless you like YELLING ON THE INTERNET) so you can use this simple fix to replace it with the CTRL to make your Emacs life easier.  Doing this will prevent you from having to bend your pinky down all day long to hit all those fabled Emacs keybindings, allowing you to keep your hands on the home row of the keyboard.

Here's how to do it across all 3 major operating systems:

*Linux X11*
There are [[https://askubuntu.com/questions/33774/how-do-i-remap-the-caps-lock-and-ctrl-keys][many ways]] to accomplish this in Linux, but the easiest (and most repeatable) I've found is to use [[https://wiki.archlinux.org/index.php/Xmodmap][xmodmap]].  First, create a file named =.Xmodmap= in your home folder and populate it like so:

#+begin_src

clear lock
clear control
keycode 66 = Control_L
add control = Control_L
add Lock = Control_R

#+end_src

This replaces CapsLock with control and also replaces the Ctrl key on the right side with CapsLock just in case you ever need to use it.  Most login systems (GDM, KDM, etc) will load this file when you log in so you might not need to do anything extra for it to take effect, just log out and log back in again.  If that doesn't seem to work, you can add this line to one of your startup files (=.xinitrc=, =.profile=, window manager configuration, etc):

#+begin_src sh

xmodmap ~/.Xmodmap

#+end_src

This beautifully written *About EMACS* section credits to [[https://github.com/daviwil/emacs-from-scratch/blob/master/README.org][Emacs From Scratch]]

* :dizzy: Ask Me Anything! ✨
#+html: <a href="../../issues/new">:speech_balloon: <b>Ask a question</b></a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="../../issues?q=is%3Aissue+is%3Aclosed+sort%3Aupdated-desc">:book: <b>Read questions</b></a>
/I get questions by email, occasionally. This way anyone can read the answer!/

[[https://GitHub.com/Likhon-baRoy/.emacs.d][https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg]]

Anything means *anything*. Personal questions. Money. Work. Life. Code.
Cooking. Traveling. Sports. Teaching. Pokémon. Whatever. :joy:

* :scroll: License

This project is open source software licensed under the [[https://github.com/sergeyklay/bnf-mode/blob/master/LICENSE][GNU General Public Licence version 3]].

Copyright © 2019, 2020, Free Software Foundation, Inc.
