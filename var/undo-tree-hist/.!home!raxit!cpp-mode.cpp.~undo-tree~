(undo-tree-save-format-version . 1)
"09cd9f51e9f38621102d0857094cc86cdf536d35"
[nil nil nil nil (25440 1213 946790 705000) 0 nil]
([nil nil ((2261 . 2272) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . -2261) (2243 . 2254) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . 2243) (2210 . 2221) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . 2210) (2187 . 2198) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . 2187) (2147 . 2158) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . 2147) (2110 . 2121) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 2110) (2053 . 2064) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 2053) (2022 . 2033) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 2022) (1975 . 1986) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1975) (1933 . 1944) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1933) (1885 . 1896) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1885) (1828 . 1839) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1828) (1791 . 1802) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1791) (1744 . 1755) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1744) (1707 . 1718) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1707) (1667 . 1678) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1667) (1612 . 1623) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1612) (1579 . 1590) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1579) (1539 . 1550) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1539) (1514 . 1525) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1514) (1466 . 1477) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1466) (1430 . 1441) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1430) (1313 . 1324) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1313) (1241 . 1252) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1241) (1214 . 1225) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1214) (1187 . 1198) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1187) (1160 . 1171) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1160) (1133 . 1144) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t)) . 1133) (1099 . 1110) (#("   " 0 3 (fontified t)) . 1099) (1086 . 1097) (#("   " 0 3 (fontified t)) . 1086) (1071 . 1084) (#("     " 0 5 (fontified t)) . 1071) (1045 . 1060) (#("       " 0 7 (fontified t)) . 1045) (1002 . 1015) (#("     " 0 5 (fontified t)) . 1002) (959 . 972) (#("     " 0 5 (fontified t)) . 959) (936 . 949) (#("     " 0 5 (fontified t)) . 936) (913 . 926) (#("     " 0 5 (fontified t)) . 913) (876 . 887) (#("   " 0 3 (fontified t)) . 876) (856 . 867) (#("   " 0 3 (fontified t)) . -856) (#("N];" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (fontified t)) . -855) (undo-tree-id21 . -3) (undo-tree-id22 . -1) (undo-tree-id23 . -3) 858 (t 25440 1075 135075 416000)) nil (25440 1213 946765 4000) 0 nil])
([nil nil ((1966 . 1969) (#("           " 0 1 (fontified t c-is-sws t) 1 2 (fontified t c-is-sws t) 2 11 (c-in-sws t fontified t c-is-sws t)) . -1966) (1956 . 1959) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1956) (1931 . 1934) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1931) (1916 . 1919) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1916) (1884 . 1887) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1884) (1855 . 1858) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1855) (1806 . 1809) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1806) (1783 . 1786) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1783) (1744 . 1747) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1744) (1710 . 1713) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1710) (1670 . 1673) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1670) (1621 . 1624) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1621) (1592 . 1595) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1592) (1553 . 1556) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1553) (1524 . 1527) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1524) (1492 . 1495) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1492) (1445 . 1448) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1445) (1420 . 1423) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1420) (1388 . 1391) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1388) (1371 . 1374) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1371) (1331 . 1334) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (c-in-sws t fontified t c-is-sws t)) . 1331) (1303 . 1306) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1303) (1194 . 1197) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1194) (1130 . 1133) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1130) (1111 . 1114) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1111) (1092 . 1095) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1092) (1073 . 1076) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1073) (1054 . 1057) (#("           " 0 1 (fontified t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t)) . 1054) (1028 . 1031) (#("           " 0 11 (fontified t c-in-sws t c-is-sws t)) . 1028) (1023 . 1026) (#("           " 0 11 (fontified t)) . 1023) (1016 . 1021) (#("             " 0 13 (fontified t)) . 1016) (998 . 1005) (#("               " 0 15 (fontified t)) . 998) (963 . 968) (#("             " 0 13 (fontified t)) . 963) (928 . 933) (#("             " 0 13 (fontified t)) . 928) (913 . 918) (#("             " 0 13 (fontified t)) . 913) (898 . 903) (#("             " 0 13 (fontified t)) . 898) (869 . 872) (#("           " 0 11 (fontified t)) . 869) (855 . 860) (#("           " 0 11 (fontified t)) . -855) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -854) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 855) nil (25440 1213 946691 42000) 0 nil])
([nil nil ((855 . 856) (854 . 856)) nil (25440 1213 946529 10000) 0 nil])
([nil nil ((859 . 862) (#("     " 0 5 (fontified t)) . -859) (857 . 858)) nil (25440 1213 946513 156000) 0 nil])
([nil nil ((nil fontified t 922 . 923) (t 25440 1214 80989 348000) (#("a" 0 1 (fontified t)) . -920) (t 25440 1214 80989 348000) (921 . 924) (t 25440 1214 80989 348000)) nil (25440 1276 245702 56000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -942) (943 . 946)) nil (25440 1276 245693 256000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -957) (958 . 961)) nil (25440 1276 245686 900000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -989) (990 . 993)) nil (25440 1276 245680 405000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1000) (1001 . 1004)) nil (25440 1276 245673 910000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 943) (#("r" 0 1 (fontified t)) . 943)) nil (25440 1276 245667 135000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -956) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("r" 0 1 (fontified t)) . -957) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 958) nil (25440 1276 245652 50000) 0 nil])
([nil nil ((1035 . 1036) (t 25440 1276 307318 906000)) nil (25440 1325 405737 659000) 0 nil])
([nil nil ((1036 . 1040)) nil (25440 1330 596056 234000) 0 nil] [nil nil ((1045 . 1050) (#("   " 0 3 (c-in-sws t c-is-sws t fontified t)) . -1045) (1036 . 1039) (1036 . 1041)) ((#("cout " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 1036) (undo-tree-id50 . -5) (undo-tree-id51 . -4) (undo-tree-id52 . -5) (#("   " 0 3 (fontified t)) . 1036) (undo-tree-id53 . -3) (1045 . 1048) (#("     " 0 5 (fontified t c-in-sws t c-is-sws t)) . 1045)) (25440 1325 393194 163000) 0 nil] [nil nil ((1036 . 1037)) ((#("m" 0 1 (fontified t)) . 1036) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1)) (25440 1322 916463 529000) 0 nil])
([nil nil ((1072 . 1077) (#("   " 0 1 (fontified t c-is-sws t) 1 3 (c-in-sws t fontified t)) . -1072) (1044 . 1049) (#("   " 0 3 (fontified t c-in-sws t c-is-sws t)) . -1044) (1036 . 1039) 1040) nil (25440 1330 596049 530000) 0 nil])
nil
nil
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1047 1050 nil nil nil t #s(yas--field 2 1055 1057 nil nil nil nil nil)) #s(yas--field 2 1055 1057 nil nil nil nil nil)) #s(yas--exit 1047 #s(yas--field 1 1047 1050 nil nil nil t #s(yas--field 2 1055 1057 nil nil nil nil nil))) 2 nil #s(yas--field 1 1047 1050 nil nil nil t #s(yas--field 2 1055 1057 nil nil nil nil nil)) nil nil)) (1039 . 1057) (#("cout" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1039) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) 1043) nil (25440 1330 596027 111000) 0 nil])
([nil nil ((1047 . 1050)) nil (25440 1330 595479 974000) 0 nil])
([nil nil ((apply yas--snippet-revive 1039 1060 #s(yas--snippet nil (#s(yas--field 1 1047 1050 nil nil nil t #s(yas--field 2 1055 1057 nil nil nil nil nil)) #s(yas--field 2 1055 1057 nil nil nil nil nil)) #s(yas--exit 1047 #s(yas--field 1 1047 1050 nil nil nil t #s(yas--field 2 1055 1057 nil nil nil nil nil))) 2 nil #s(yas--field 1 1047 1050 nil nil nil t #s(yas--field 2 1055 1057 nil nil nil nil nil)) nil nil))) nil (25440 1369 250270 877000) 0 nil])
([nil nil ((1062 . 1065) (#("     " 0 5 (c-in-sws t c-is-sws t fontified t)) . -1062) (931 . 932) (t 25440 1330 730357 404000)) nil (25440 1369 250264 661000) 0 nil])
([nil nil ((939 . 943) (940 . 947) (#("     " 0 5 (fontified t)) . -940) (938 . 939) (932 . 937) (932 . 933)) nil (25440 1369 250256 210000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -942) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 943) nil (25440 1369 250245 525000) 0 nil])
([nil nil ((942 . 944)) nil (25440 1369 250194 541000) 0 nil])
([nil nil ((946 . 951) (#("       " 0 7 (fontified t)) . -946) (944 . 945)) nil (25440 1369 250179 315000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 932) (undo-tree-id179 . -1) (#("     count++;" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t)) . -932) (undo-tree-id180 . -13) (undo-tree-id181 . -13) (undo-tree-id182 . -13) (undo-tree-id183 . -13) 945 (t 25440 1369 300148 454000)) nil (25440 1501 855799 410000) 0 nil])
([nil nil ((967 . 968)) nil (25440 1501 855763 92000) 0 nil])
([nil nil ((nil rear-nonsticky nil 980 . 981) (nil fontified nil 980 . 981) (nil fontified nil 979 . 980) (nil fontified nil 978 . 979) (nil fontified nil 977 . 978) (nil fontified nil 976 . 977) (nil fontified nil 975 . 976) (nil fontified nil 974 . 975) (nil fontified nil 973 . 974) (nil fontified nil 972 . 973) (nil fontified nil 967 . 972) (967 . 981)) nil (25440 1501 855747 797000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 995) (t 25440 1501 999429 560000)) nil (25440 1679 483577 662000) 0 nil])
([nil nil ((995 . 996)) nil (25440 1679 483563 275000) 0 nil])
([nil nil ((#("     count++;
" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t rear-nonsticky t)) . 967) (undo-tree-id184 . -14) (undo-tree-id185 . -14) (undo-tree-id186 . -14) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (undo-tree-id189 . -14) (undo-tree-id190 . -14) (undo-tree-id191 . -14) (undo-tree-id192 . -13) (undo-tree-id193 . -13) (undo-tree-id194 . -13) (undo-tree-id195 . -13) (undo-tree-id196 . -13) (undo-tree-id197 . -13) (undo-tree-id198 . -13) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -13) (undo-tree-id207 . -13) (undo-tree-id208 . -13) (undo-tree-id209 . -13) (undo-tree-id210 . -13) (undo-tree-id211 . -13) (t 25440 1679 575134 217000)) nil (25440 1705 708056 596000) 0 nil])
([nil nil ((nil fontified nil 945 . 946) (nil fontified nil 944 . 945) (nil fontified nil 943 . 944) (nil fontified nil 942 . 943) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 937 . 938) (nil fontified nil 932 . 937) (932 . 946)) nil (25440 1705 707963 777000) 0 nil])
([nil nil ((#("     count++;
" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (rear-nonsticky t fontified t)) . 932) (undo-tree-id218 . -14) (undo-tree-id219 . -14) (t 25440 1705 838325 270000)) nil (25440 1813 426111 963000) 0 nil])
([nil nil ((#("     if (max < count) max = count;
" 0 5 (fontified t) 5 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t) 10 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t composition (0 1 [10216]) prettify-symbols-start 945 prettify-symbols-end 946) 14 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-3-face)) 21 23 (fontified t) 23 24 (fontified t) 24 35 (fontified t)) . 932) (undo-tree-id215 . -35) (undo-tree-id216 . -35) (undo-tree-id217 . -35)) nil (25440 1813 426099 601000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1045 . 1046) (nil fontified nil 1035 . 1046) (nil fontified nil 1034 . 1035) (nil fontified nil 1032 . 1034) (nil fontified nil 1031 . 1032) (nil fontified nil 1025 . 1031) (nil fontified nil 1024 . 1025) (nil fontified nil 1022 . 1024) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1019 . 1020) (nil fontified nil 1018 . 1019) (nil fontified nil 1016 . 1018) (nil fontified nil 1011 . 1016) (nil fontified nil 1010 . 1011) (nil fontified nil 1009 . 1010) (nil fontified nil 1008 . 1009) (nil fontified nil 1007 . 1008) (nil fontified nil 1006 . 1007) (nil fontified nil 1005 . 1006) (nil fontified nil 1004 . 1005) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 997 . 1002) (997 . 1046)) nil (25440 1813 426083 747000) 0 nil])
([nil nil ((#("     count++;
" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (rear-nonsticky t fontified t)) . 997) (undo-tree-id214 . -14)) nil (25440 1813 426064 192000) 0 nil])
([nil nil ((996 . 997)) nil (25440 1813 426055 392000) 0 nil])
([nil nil ((997 . 1001)) nil (25440 1813 426050 14000) 0 nil])
([nil nil ((1003 . 1010) (#("     " 0 5 (fontified t)) . -1003) (1001 . 1002) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1001) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (997 . 1001) 1001) nil (25440 1813 426042 471000) 0 nil])
([nil nil ((1003 . 1009) (1004 . 1018) (#("       " 0 7 (fontified t)) . -1004) (1002 . 1003)) nil (25440 1813 426011 601000) 0 nil])
([nil nil ((1011 . 1016) (#("              " 0 14 (fontified t)) . -1011) (1009 . 1010)) nil (25440 1813 425994 141000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -987) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 988 (t 25440 1813 797740 404000)) nil (25440 1876 454567 835000) 0 nil])
([nil nil ((987 . 988)) nil (25440 1876 454512 730000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -987) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 988 (t 25440 1876 587400 243000)) nil (25440 2063 89973 168000) 0 nil])
([nil nil ((987 . 988)) nil (25440 2063 89936 153000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -946) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 947 (t 25440 2063 476387 778000)) nil (25440 2093 896907 564000) 0 nil])
([nil nil ((946 . 947)) nil (25440 2093 896856 371000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -895) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) 896 (t 25440 2094 292887 498000)) nil (25440 2153 171154 233000) 0 nil])
([nil nil ((893 . 894)) nil (25440 2153 171105 903000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -987) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 988 (t 25440 2153 585899 613000)) nil (25440 2284 96100 800000) 0 nil])
([nil nil ((987 . 988)) nil (25440 2284 96049 117000) 0 nil])
([nil nil ((#("     arr[i] = k;

     if (i > 0 && arr[i-1] > arr[i]) {
       count = 1;
     } else count++;" 0 5 (fontified t) 5 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-3-face)) 11 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 23 (fontified t) 23 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-3-face)) 27 29 (fontified t) 29 30 (fontified t composition (2 1 [10217]) prettify-symbols-start 944 prettify-symbols-end 945) 30 31 (fontified t) 31 32 (fontified t) 32 36 (fontified t) 36 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-4-face)) 44 45 (fontified t) 45 46 (fontified t composition (2 1 [10217]) prettify-symbols-start 960 prettify-symbols-end 961) 46 47 (fontified t) 47 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-4-face)) 51 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-4-face)) 53 54 (fontified t face (rainbow-delimiters-depth-3-face)) 54 55 (fontified t) 55 56 (fontified t face (rainbow-delimiters-depth-3-face)) 56 57 (fontified t) 57 64 (fontified t) 64 72 (fontified t) 72 73 (fontified t) 73 75 (fontified t) 75 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-3-face)) 81 82 (fontified t) 82 86 (fontified t face font-lock-keyword-face) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t)) . 915) (undo-tree-id261 . -95) (undo-tree-id262 . -17) (undo-tree-id263 . -17) (undo-tree-id264 . -17) (undo-tree-id265 . -17) (undo-tree-id266 . -17) (undo-tree-id267 . -17) (undo-tree-id268 . -73) (undo-tree-id269 . -95) (t 25440 2284 201858 673000)) nil (25440 3557 641985 159000) 0 nil])
([nil nil ((921 . 922) (922 . 929) (#("     " 0 5 (fontified t)) . -922) (915 . 920) (915 . 916)) nil (25440 3557 641956 454000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 924 930 nil nil nil t #s(yas--field 2 932 948 nil nil nil nil #s(yas--exit 941 nil))) #s(yas--field 2 932 948 nil nil nil nil #s(yas--exit 941 nil))) #s(yas--exit 941 nil) 3 nil #s(yas--field 2 932 948 nil nil nil nil #s(yas--exit 941 nil)) nil nil)) (945 . 950) (937 . 944) (#("    " 0 4 (fontified nil)) . -937) (undo-tree-id259 . -4) (920 . 943) (#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . 920) (undo-tree-id260 . -2) 922) nil (25440 3557 641946 187000) 0 nil])
([nil nil ((925 . 926) (#("condition" 0 9 (fontified nil)) . 925) (924 . 925)) nil (25440 3557 641929 845000) 0 nil])
([nil nil ((926 . 927)) nil (25440 3557 641923 0) 0 nil])
([nil nil ((927 . 929)) nil (25440 3557 641917 343000) 0 nil])
([nil nil ((929 . 930)) nil (25440 3557 641911 476000) 0 nil])
([nil nil ((apply yas--snippet-revive 920 948 #s(yas--snippet nil (#s(yas--field 1 924 930 nil nil nil t #s(yas--field 2 932 948 nil nil nil nil #s(yas--exit 941 nil))) #s(yas--field 2 932 948 nil nil nil nil #s(yas--exit 941 nil))) #s(yas--exit 941 nil) 3 nil #s(yas--field 2 932 948 nil nil nil nil #s(yas--exit 941 nil)) nil nil))) nil (25440 3557 641905 819000) 0 nil])
([nil nil ((941 . 942)) nil (25440 3557 641900 22000) 0 nil])
([nil nil ((943 . 944) (955 . 960) (#("       " 0 7 (fontified t)) . -955) (944 . 953) (#("     " 0 5 (fontified t)) . -944) (942 . 943)) nil (25440 3557 641892 549000) 0 nil])
([nil nil ((946 . 951) (#("         " 0 9 (fontified t)) . -946) (944 . 945)) nil (25440 3557 641882 841000) 0 nil])
([nil nil ((958 . 965) (#("         " 0 9 (fontified t)) . -958) (954 . 957) (955 . 964) (#("     " 0 5 (fontified t)) . -955) (952 . 954)) nil (25440 3557 641874 251000) 0 nil])
([nil nil ((957 . 958) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 957) (undo-tree-id258 . -4) (953 . 957) 957) nil (25440 3557 641864 54000) 0 nil])
([nil nil ((959 . 962) (960 . 974) (#("       " 0 7 (fontified t)) . -960) (958 . 959)) nil (25440 3557 641852 111000) 0 nil])
([nil nil ((959 . 966) (#("              " 0 14 (fontified t)) . -959) (#("n = " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -958) (undo-tree-id257 . -4) 962) nil (25440 3557 641842 892000) 0 nil])
([nil nil ((#("n++;" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -941) (undo-tree-id255 . -1) (undo-tree-id256 . -4) 945) nil (25440 3557 641830 810000) 0 nil])
([nil nil ((946 . 948) (947 . 956) (#("     " 0 5 (fontified t)) . -947) (941 . 946)) nil (25440 3557 641817 540000) 0 nil])
([nil nil ((950 . 955) (#("         " 0 9 (fontified t)) . -950) (948 . 949)) nil (25440 3557 641809 159000) 0 nil])
([nil nil ((963 . 971) (964 . 978) (#("       " 0 7 (fontified t)) . -964) (962 . 963)) nil (25440 3557 641800 778000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -970) (undo-tree-id254 . -1) 971) nil (25440 3557 641791 489000) 0 nil])
([nil nil ((970 . 971)) nil (25440 3557 641763 622000) 0 nil])
([nil nil ((973 . 978) (#("              " 0 14 (fontified t)) . -973) (971 . 972)) nil (25440 3557 641743 368000) 0 nil])
([nil nil ((972 . 973) (t 25440 3558 24957 780000)) nil (25440 3618 790359 584000) 0 nil])
([nil nil ((979 . 983) (980 . 987) (#("     " 0 5 (fontified t)) . -980) (973 . 978) (973 . 974)) nil (25440 3618 790351 692000) 0 nil])
([nil nil ((985 . 990) (#("       " 0 7 (fontified t)) . -985) (983 . 984)) nil (25440 3618 790334 441000) 0 nil])
([nil nil ((1096 . 1107) (#("   " 0 3 (fontified t)) . -1096) (1083 . 1094) (#("   " 0 3 (fontified t)) . 1083) (1040 . 1053) (#("     " 0 5 (fontified t)) . 1040) (1020 . 1033) (#("     " 0 5 (fontified t)) . 1020) (989 . 1002) (#("     " 0 5 (fontified t)) . 989) (965 . 980) (#("       " 0 7 (fontified t)) . 965) (938 . 951) (#("     " 0 5 (fontified t)) . 938) (915 . 928) (#("     " 0 5 (fontified t)) . 915) (878 . 889) (#("   " 0 3 (fontified t)) . 878) (858 . 869) (#("   " 0 3 (fontified t)) . -858) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -856) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) 857 (t 25440 3618 917961 228000)) nil (25440 38529 331755 461000) 0 nil])
([nil nil ((1025 . 1028) (#("           " 0 11 (fontified t)) . -1025) (1020 . 1023) (#("           " 0 11 (fontified t)) . 1020) (985 . 990) (#("             " 0 13 (fontified t)) . 985) (973 . 978) (#("             " 0 13 (fontified t)) . 973) (950 . 955) (#("             " 0 13 (fontified t)) . 950) (934 . 941) (#("               " 0 15 (fontified t)) . 934) (915 . 920) (#("             " 0 13 (fontified t)) . 915) (900 . 905) (#("             " 0 13 (fontified t)) . 900) (871 . 874) (#("           " 0 11 (fontified t)) . 871) (859 . 862) (#("           " 0 11 (fontified t)) . -859) (856 . 857) (#("]" 0 1 (fontified nil)) . -856) (856 . 857)) nil (25440 38529 331587 842000) 0 nil])
([nil nil ((#("   int arr[N];
   max = 1;
   for (i = 0; i < N; i++) {
     cin >> k;
     if (k >= l) {
       count++;
     } else count = 1;
     l = k;
     if (max < count) max = count;
   }" 0 3 (fontified t) 3 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t composition (1 1 [10214]) prettify-symbols-start 854 prettify-symbols-end 855 face (rainbow-delimiters-depth-2-face)) 11 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-2-face)) 13 15 (fontified t) 15 26 (fontified t) 26 30 (fontified t) 30 33 (fontified t face font-lock-keyword-face) 33 34 (fontified t) 34 35 (fontified t face (rainbow-delimiters-depth-2-face)) 35 44 (fontified t) 44 45 (fontified t composition (4 1 [10216]) prettify-symbols-start 888 prettify-symbols-end 889) 45 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-2-face)) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-2-face)) 55 65 (fontified t) 65 67 (fontified t composition (5 2 [10219]) prettify-symbols-start 909 prettify-symbols-end 911) 67 76 (fontified t) 76 78 (fontified t face font-lock-keyword-face) 78 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-3-face)) 80 82 (fontified t) 82 84 (fontified t composition (6 2 [10878]) prettify-symbols-start 926 prettify-symbols-end 928) 84 86 (fontified t) 86 87 (fontified t face (rainbow-delimiters-depth-3-face)) 87 88 (fontified t) 88 89 (fontified t face (rainbow-delimiters-depth-3-face)) 89 111 (fontified t) 111 112 (fontified t face (rainbow-delimiters-depth-3-face)) 112 113 (fontified t) 113 117 (fontified t face font-lock-keyword-face) 117 146 (fontified t) 146 148 (fontified t face font-lock-keyword-face) 148 149 (fontified t) 149 150 (fontified t face (rainbow-delimiters-depth-3-face)) 150 154 (fontified t) 154 155 (fontified t composition (4 1 [10216]) prettify-symbols-start 998 prettify-symbols-end 999) 155 161 (fontified t) 161 162 (fontified t face (rainbow-delimiters-depth-3-face)) 162 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-2-face))) . 844) (undo-tree-id67 . -26) (undo-tree-id68 . -180) (undo-tree-id69 . -176) (undo-tree-id70 . -180) (undo-tree-id71 . 1) (undo-tree-id72 . -180) (undo-tree-id73 . 126) (undo-tree-id74 . -55) 1024 (t 25440 38529 432320 634000)) nil (25441 64475 617788 755000) 0 nil])
([nil nil ((848 . 852) (849 . 854) (#("   " 0 3 (fontified t)) . -849) (844 . 847) (844 . 845)) nil (25441 64475 617718 425000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 854 857 nil nil nil t #s(yas--exit 866 nil))) #s(yas--exit 866 nil) 0 nil #s(yas--field 1 854 857 nil nil nil t #s(yas--exit 866 nil)) nil nil)) (873 . 876) (867 . 872) (#("      " 0 6 (fontified nil)) . -867) (undo-tree-id65 . -6) (847 . 875) (#("while" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face)) . 847) (undo-tree-id66 . -5) 852) nil (25441 64475 617709 136000) 0 nil])
([nil nil ((855 . 857) (#("condition" 0 9 (fontified nil)) . 855) (854 . 855)) nil (25441 64475 617688 44000) 0 nil])
([nil nil ((apply yas--snippet-revive 847 871 #s(yas--snippet nil (#s(yas--field 1 854 857 nil nil nil t #s(yas--exit 866 nil))) #s(yas--exit 866 nil) 0 nil #s(yas--field 1 854 857 nil nil nil t #s(yas--exit 866 nil)) nil nil))) nil (25441 64475 617681 758000) 0 nil])
([nil nil ((869 . 870) (879 . 882) (#("     " 0 5 (fontified t)) . -879) (870 . 877) (#("   " 0 3 (fontified t)) . -870) (866 . 869)) nil (25441 64475 617675 473000) 0 nil])
([nil nil ((870 . 872)) nil (25441 64475 617667 92000) 0 nil])
([nil nil ((872 . 874)) nil (25441 64475 617661 993000) 0 nil])
([nil nil ((876 . 879) (#("       " 0 7 (fontified t)) . -876) (874 . 875)) nil (25441 64475 617656 127000) 0 nil])
([nil nil ((875 . 881)) nil (25441 64475 617649 911000) 0 nil])
([nil nil ((885 . 892) (#("   " 0 3 (fontified t)) . -885) (881 . 884)) nil (25441 64475 617644 114000) 0 nil])
([nil nil ((884 . 886)) nil (25441 64475 617637 619000) 0 nil])
([nil nil ((885 . 891)) nil (25441 64475 617632 660000) 0 nil])
([nil nil ((894 . 900) (895 . 913) (#("       " 0 7 (fontified t)) . -895) (892 . 894)) nil (25441 64475 617626 723000) 0 nil])
([nil nil ((900 . 901)) nil (25441 64475 617619 809000) 0 nil])
([nil nil ((903 . 906) (#("                  " 0 18 (fontified t)) . -903) (901 . 902)) nil (25441 64475 617614 82000) 0 nil])
([nil nil ((902 . 903)) nil (25441 64475 617607 866000) 0 nil])
([nil nil ((903 . 907)) nil (25441 64475 617602 768000) 0 nil])
([nil nil ((914 . 921) (#("   " 0 3 (fontified t)) . -914) (912 . 913) (#(" x" 0 2 (fontified nil)) . -912) (903 . 908) (907 . 909) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 907) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (903 . 907) 907) nil (25441 64475 617595 295000) 0 nil])
([nil nil ((919 . 931) (#("       " 0 7 (fontified t)) . -919) (913 . 918)) nil (25441 64475 617577 695000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -916) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("n" 0 1 (fontified t)) . -917) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 918) nil (25441 64475 617564 146000) 0 nil])
([nil nil ((916 . 920)) nil (25441 64475 617444 927000) 0 nil])
([nil nil ((922 . 925) (#("            " 0 12 (fontified t)) . -922) (920 . 921)) nil (25441 64475 617439 200000) 0 nil])
([nil nil ((#("max" 0 3 (fontified t)) . 938) (undo-tree-id0 . -3)) nil (25441 64475 617431 307000) 0 nil])
([nil nil ((938 . 943)) nil (25441 64475 617356 88000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 892) (t 25441 64476 93319 595000)) nil (25441 64603 266512 857000) 0 nil])
([nil nil ((892 . 893)) nil (25441 64603 266506 222000) 0 nil])
([nil nil ((#("sum" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 893)) nil (25441 64603 266499 937000) 0 nil])
([nil nil ((893 . 898)) nil (25441 64603 266494 140000) 0 nil])
([nil nil ((928 . 929)) nil (25441 64603 266487 715000) 0 nil])
([nil nil ((933 . 940) (934 . 939) (#("   " 0 3 (fontified t)) . -934) (929 . 932) (929 . 930)) nil (25441 64603 266481 80000) 0 nil])
([nil nil ((940 . 945)) nil (25441 64603 266472 838000) 0 nil])
([nil nil ((945 . 946)) nil (25441 64603 266467 321000) 0 nil])
([nil nil ((946 . 947)) nil (25441 64603 266461 734000) 0 nil])
([nil nil ((947 . 949)) nil (25441 64603 266456 146000) 0 nil])
([nil nil ((951 . 954) (#("     " 0 5 (fontified t)) . -951) (949 . 950)) nil (25441 64603 266449 791000) 0 nil])
([nil nil ((932 . 936)) nil (25441 64603 266442 667000) 0 nil])
([nil nil ((936 . 941) (#("   " 0 3 (fontified t)) . -936) (932 . 935)) nil (25441 64603 266436 172000) 0 nil])
([nil nil ((935 . 937)) nil (25441 64603 266428 978000) 0 nil])
([nil nil ((936 . 937)) nil (25441 64603 266423 42000) 0 nil])
([nil nil ((937 . 950)) nil (25441 64603 266417 35000) 0 nil])
([nil nil ((951 . 952)) nil (25441 64603 266411 168000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 952) (undo-tree-id156 . -1) (undo-tree-id157 . 1)) nil (25441 64603 266401 880000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 952) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (#(" " 0 1 (fontified t)) . 952) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (#(" " 0 1 (fontified t)) . 952) (undo-tree-id147 . 1) (undo-tree-id148 . 1) (undo-tree-id149 . 1) (undo-tree-id150 . 1) (#(" " 0 1 (fontified t)) . 952) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . 1) (#(" " 0 1 (fontified t)) . 952) (undo-tree-id154 . 1) (undo-tree-id155 . 1)) nil (25441 64603 265735 105000) 0 nil])
([nil nil ((970 . 971)) nil (25441 64603 265688 800000) 0 nil])
([nil nil ((975 . 977) (976 . 981) (#("   " 0 3 (fontified t)) . -976) (971 . 974) (971 . 972)) nil (25441 64603 265682 864000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -976) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 977) nil (25441 64603 265673 86000) 0 nil])
([nil nil ((976 . 978)) nil (25441 64603 265642 495000) 0 nil])
([nil nil ((978 . 979) (#(" x" 0 2 (fontified nil)) . -978) (978 . 980) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 978) (undo-tree-id75 . -4) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (974 . 978) 978) nil (25441 64603 265630 832000) 0 nil])
([nil nil ((980 . 987) (981 . 991) (#("     " 0 5 (fontified t)) . -981) (979 . 980)) nil (25441 64603 265518 527000) 0 nil])
([nil nil ((987 . 993)) nil (25441 64603 265511 543000) 0 nil])
([nil nil ((993 . 994)) nil (25441 64603 265506 235000) 0 nil])
([nil nil ((994 . 996)) nil (25441 64603 265500 578000) 0 nil])
([nil nil ((998 . 1001) (#("          " 0 10 (fontified t)) . -998) (996 . 997)) nil (25441 64603 265486 959000) 0 nil])
([nil nil ((928 . 929) (t 25441 64603 635961 970000)) nil (25441 64770 727940 518000) 0 nil])
([nil nil ((938 . 943) (#("   " 0 3 (fontified t)) . -938) (929 . 932) (929 . 934)) nil (25441 64770 727933 953000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -936) (undo-tree-id164 . -1) 937) nil (25441 64770 727925 642000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--exit 940 #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil))) 1 nil #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) nil nil)) (932 . 950) (#("cout" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 932) (undo-tree-id162 . -4) (undo-tree-id163 . -4) 936) nil (25441 64770 727910 67000) 0 nil])
([nil nil ((940 . 943)) nil (25441 64770 727896 658000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -942) (undo-tree-id160 . -1) (undo-tree-id161 . -1) 943) nil (25441 64770 727889 743000) 0 nil])
([nil nil ((942 . 945)) nil (25441 64770 727877 381000) 0 nil])
([nil nil ((945 . 946)) nil (25441 64770 727871 794000) 0 nil])
([nil nil ((946 . 948)) nil (25441 64770 727866 67000) 0 nil])
([nil nil ((951 . 953) (nil syntax-table nil 960 . 961) (nil syntax-table (1) 958 . 959) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -951) (undo-tree-id158 . -1) (951 . 952) (nil syntax-table nil 960 . 961) (nil syntax-table (1) 958 . 959) (950 . 951) (nil syntax-table nil 959 . 960) (nil syntax-table (1) 957 . 958) (949 . 950) (#("\"" 0 1 (fontified nil)) . -949) (undo-tree-id159 . -1) (nil syntax-table nil 959 . 960) (nil syntax-table (1) 957 . 958) (948 . 950)) nil (25441 64770 727856 639000) 0 nil])
([nil nil ((953 . 955)) nil (25441 64770 727819 762000) 0 nil])
([nil nil ((955 . 961)) nil (25441 64770 727806 4000) 0 nil])
([nil nil ((apply yas--snippet-revive 932 971 #s(yas--snippet nil (#s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--exit 940 #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil))) 1 nil #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) nil nil))) nil (25441 64806 143865 876000) 0 nil])
([nil nil ((972 . 975) (#("     " 0 5 (fontified t)) . 972) 1001 (t 25441 64770 821722 914000)) nil (25441 64806 143851 488000) 0 nil])
([nil nil ((1030 . 1038) (t 25441 64806 244864 344000)) nil (25441 64845 318388 286000) 0 nil])
([nil nil ((1038 . 1040)) nil (25441 64845 318382 349000) 0 nil])
([nil nil ((1050 . 1075) (#("   " 0 3 (fontified t)) . -1050) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 1039) (undo-tree-id169 . 1) (undo-tree-id170 . 1) (undo-tree-id171 . 1) (undo-tree-id172 . 1)) nil (25441 64845 318375 365000) 0 nil])
([nil nil ((1051 . 1054) (#("                         " 0 25 (fontified t)) . -1051) (1048 . 1049) (#(")" 0 1 (fontified nil)) . -1048) (1048 . 1049)) nil (25441 64845 318358 114000) 0 nil])
([nil nil ((1003 . 1011)) nil (25441 64845 318350 222000) 0 nil])
([nil nil ((1011 . 1013)) nil (25441 64845 318344 914000) 0 nil])
([nil nil ((1023 . 1063) (#("   " 0 3 (fontified t)) . -1023) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 1012) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1)) nil (25441 64845 318337 930000) 0 nil])
([nil nil ((1024 . 1027) (#("                                        " 0 40 (fontified t)) . -1024) (1021 . 1022) (#(")" 0 1 (fontified nil)) . -1021) (1021 . 1022)) nil (25441 64883 284748 140000) 0 nil])
([nil nil ((apply -3 932 974 undo--wrap-and-run-primitive-undo 932 974 (("   " . 932) (932 . 938))) (t 25441 64845 701317 257000)) nil (25441 64891 66684 527000) 0 nil] [nil nil ((970 . 974) (t 25441 64845 701317 257000)) ((#(" // " 0 1 (fontified t c-in-sws t c-is-sws t) 1 2 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 2 4 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 970) (undo-tree-id173 . -4) (undo-tree-id174 . -4)) (25441 64883 281323 612000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -990) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 991 (t 25441 64891 171070 926000)) nil (25442 1729 136978 321000) 0 nil])
nil
([nil nil ((990 . 991)) nil (25442 1729 136929 921000) 0 nil])
([nil nil ((981 . 986) (#("   " 0 3 (c-is-sws t fontified t)) . -981) (974 . 977) (974 . 977) (t 25442 1729 311542 436000)) nil (25442 2076 517798 711000) 0 nil])
([nil nil ((980 . 982)) nil (25442 2076 517791 308000) 0 nil])
([nil nil ((981 . 984)) nil (25442 2076 517786 210000) 0 nil])
([nil nil ((981 . 986) (#("cou" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -981) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -3) 984) nil (25442 2076 517773 289000) 0 nil])
([nil nil ((986 . 987)) nil (25442 2076 517634 25000) 0 nil])
([nil nil ((987 . 988)) nil (25442 2076 517622 711000) 0 nil])
([nil nil ((988 . 990)) nil (25442 2076 517617 124000) 0 nil])
([nil nil ((993 . 995) (994 . 1014) (#("     " 0 5 (fontified t)) . -994) (991 . 993)) nil (25442 2076 517610 559000) 0 nil])
([nil nil ((995 . 1001)) nil (25442 2076 517602 108000) 0 nil])
([nil nil ((1003 . 1006) (#("                    " 0 20 (fontified t)) . -1003) (1001 . 1002)) nil (25442 2076 517588 70000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1000) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) 1001 (t 25442 2076 656327 375000)) nil (25442 2079 262989 418000) 0 nil])
([nil nil ((1000 . 1001)) nil (25442 2079 262939 412000) 0 nil])
([nil nil ((#(";
" 0 1 (fontified nil c-is-sws t) 1 2 (fontified nil)) . 974) (undo-tree-id253 . -2) (#("   if (count < 1) count = 1" 0 1 (fontified t c-is-sws t) 1 3 (fontified t c-is-sws t) 3 4 (fontified t c-is-sws t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t composition (4 1 [10216]) prettify-symbols-start 987 prettify-symbols-end 988) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-2-face)) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t)) . -974) (undo-tree-id254 . -27) (undo-tree-id255 . -27) 1001 (t 25442 2079 342979 486000)) nil (25442 2175 441063 861000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1091 . 1092) (nil fontified nil 1091 . 1092) (nil fontified nil 1090 . 1091) (nil fontified nil 1089 . 1090) (nil fontified nil 1088 . 1089) (nil fontified nil 1087 . 1088) (nil fontified nil 1086 . 1087) (nil fontified nil 1085 . 1086) (nil fontified nil 1084 . 1085) (nil fontified nil 1083 . 1084) (nil fontified nil 1082 . 1083) (nil fontified nil 1081 . 1082) (nil fontified nil 1080 . 1081) (nil fontified nil 1079 . 1080) (nil fontified nil 1078 . 1079) (nil fontified nil 1077 . 1078) (nil fontified nil 1076 . 1077) (nil fontified nil 1075 . 1076) (nil fontified nil 1070 . 1075) (nil fontified nil 1069 . 1070) (nil fontified nil 1068 . 1069) (nil fontified nil 1067 . 1068) (nil fontified nil 1066 . 1067) (nil fontified nil 1064 . 1066) (nil fontified nil 1063 . 1064) (1063 . 1092)) nil (25442 2175 441023 632000) 0 nil])
([nil nil ((1061 . 1063) (t 25442 2175 495791 915000)) nil (25442 2526 868330 297000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1062) (undo-tree-id288 . -1) 1063) nil (25442 2526 868323 523000) 0 nil])
([nil nil ((1062 . 1064)) nil (25442 2526 868314 583000) 0 nil])
([nil nil ((1064 . 1066)) nil (25442 2526 868309 345000) 0 nil])
([nil nil ((1065 . 1073)) nil (25442 2526 868303 827000) 0 nil])
([nil nil ((1073 . 1074)) nil (25442 2526 868298 519000) 0 nil])
([nil nil ((1024 . 1025)) nil (25442 2526 868293 142000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -1024) (undo-tree-id287 . -1) 1025) nil (25442 2526 868286 646000) 0 nil])
([nil nil ((1024 . 1027)) nil (25442 2526 868277 497000) 0 nil])
([nil nil ((1027 . 1029)) nil (25442 2526 868272 119000) 0 nil])
([nil nil ((1028 . 1032)) nil (25442 2526 868266 672000) 0 nil])
([nil nil ((1028 . 1033) (#("tota" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1028) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -2) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) 1032) nil (25442 2526 868256 196000) 0 nil])
([nil nil ((1033 . 1034)) nil (25442 2526 868172 596000) 0 nil])
([nil nil ((1034 . 1037)) nil (25442 2526 868159 465000) 0 nil])
([nil nil ((1047 . 1048) (#(" x" 0 2 (fontified nil)) . -1047) (1047 . 1049) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 1047) (undo-tree-id294 . -4) (1043 . 1047) 1047 (t 25442 2526 990554 372000)) nil (25442 2684 339404 484000) 0 nil])
([nil nil ((1048 . 1051)) nil (25442 2684 339393 309000) 0 nil])
([nil nil ((1051 . 1053)) nil (25442 2684 339388 281000) 0 nil])
([nil nil ((1052 . 1067)) nil (25442 2684 339383 252000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -1065) (undo-tree-id292 . -1) (#("0" 0 1 (fontified t)) . -1066) (undo-tree-id293 . -1) 1067) nil (25442 2684 339376 687000) 0 nil])
([nil nil ((1065 . 1066)) nil (25442 2684 339364 954000) 0 nil])
([nil nil ((1110 . 1111)) nil (25442 2684 339359 855000) 0 nil])
([nil nil ((1115 . 1118) (1116 . 1121) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . -1116) (1111 . 1114) (1111 . 1112)) nil (25442 2684 339354 58000) 0 nil])
([nil nil ((1118 . 1119) (#(" x" 0 2 (fontified nil)) . -1118) (1118 . 1120) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1118) (undo-tree-id291 . -4) (1114 . 1118) 1118) nil (25442 2684 339344 839000) 0 nil])
([nil nil ((1120 . 1127) (1121 . 1131) (#("     " 0 5 (fontified t)) . -1121) (1119 . 1120)) nil (25442 2684 347084 791000) 0 nil])
([nil nil ((1127 . 1128)) nil (25442 2731 32051 424000) 0 nil] [nil nil ((1120 . 1125) (#("          " 0 10 (fontified t)) . -1120) (#("count = " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -1119) (undo-tree-id289 . -8) (undo-tree-id290 . -8) 1127) ((1119 . 1127) (1120 . 1130) (#("     " 0 5 (fontified t)) . 1120)) (25442 2684 339319 208000) 0 nil])
([nil nil ((1130 . 1133) (#("          " 0 10 (fontified t)) . 1130) (1128 . 1129)) ((#(";" 0 1 (fontified t)) . 1128) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id299 . -1) (undo-tree-id301 . -1) (undo-tree-id303 . -1) (undo-tree-id305 . -1) (1130 . 1140) (#("   " 0 3 (fontified t)) . 1130) (t 25442 2691 602995 923000)) (25442 2733 132441 705000) 0 nil])
nil
([nil nil ((#("1" 0 1 (fontified t)) . -1127) (undo-tree-id306 . -1) 1128 (t 25442 2691 602995 923000)) nil (25442 2794 639555 500000) 0 nil])
([nil nil ((1127 . 1136)) nil (25442 2794 639523 512000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1135) (undo-tree-id310 . -1) (undo-tree-id311 . -1) 1136 (t 25442 2794 765770 375000)) nil (25442 3005 896076 218000) 0 nil])
([nil nil ((1135 . 1137)) nil (25442 3005 896064 205000) 0 nil])
([nil nil ((1136 . 1140)) nil (25442 3005 896059 177000) 0 nil])
([nil nil ((#("toat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1136) (undo-tree-id309 . -4) 1140) nil (25442 3005 896053 170000) 0 nil])
([nil nil ((1136 . 1138)) nil (25442 3005 896044 21000) 0 nil])
([nil nil ((1136 . 1141) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1136) (undo-tree-id307 . -2) (undo-tree-id308 . -2) 1138) nil (25442 3005 896037 107000) 0 nil])
([nil nil ((1141 . 1143)) nil (25442 3005 896010 497000) 0 nil])
([nil nil ((1143 . 1145)) nil (25442 3005 895998 275000) 0 nil])
([nil nil ((1146 . 1149) (t 25442 3006 41292 464000)) nil (25442 3107 842434 411000) 0 nil])
([nil nil ((1149 . 1151)) nil (25442 3107 842428 754000) 0 nil])
([nil nil ((1150 . 1152)) nil (25442 3107 842423 446000) 0 nil])
([nil nil ((1150 . 1155) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1150) (undo-tree-id324 . -2) (undo-tree-id325 . -2) 1152) nil (25442 3107 842416 951000) 0 nil])
([nil nil ((1155 . 1158)) nil (25442 3107 842405 776000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -1156) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#(" " 0 1 (fontified t)) . -1157) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 1158) nil (25442 3107 842397 884000) 0 nil])
([nil nil ((1156 . 1157)) nil (25442 3107 842350 252000) 0 nil])
([nil nil ((1157 . 1158)) nil (25442 3107 842344 805000) 0 nil])
([nil nil ((1158 . 1159)) nil (25442 3107 842332 94000) 0 nil])
([nil nil ((#("else count = count + (total % 4) + (total / 4);" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-2-face)) 22 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-2-face)) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-2-face)) 36 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t)) . 1114) (undo-tree-id330 . -45) (t 25442 3107 964073 635000)) nil (25442 3268 868767 342000) 0 nil])
([nil nil ((1115 . 1118) (1116 . 1121) (#("   " 0 3 (fontified t)) . -1116) (1114 . 1115)) nil (25442 3268 868757 774000) 0 nil])
([nil nil ((1118 . 1119) (#(" x" 0 2 (fontified nil)) . -1118) (1118 . 1120) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1118) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (1114 . 1118) 1118) nil (25442 3268 868749 44000) 0 nil])
([nil nil ((1119 . 1122)) nil (25442 3268 868735 704000) 0 nil])
([nil nil ((1122 . 1124)) nil (25442 3268 868730 326000) 0 nil])
([nil nil ((1123 . 1129)) nil (25442 3268 868725 297000) 0 nil])
([nil nil ((1129 . 1130)) nil (25442 3268 868720 339000) 0 nil])
([nil nil ((1130 . 1132)) nil (25442 3268 868715 310000) 0 nil])
([nil nil ((1135 . 1138) (1136 . 1161) (#("     " 0 5 (fontified t)) . -1136) (1133 . 1135)) nil (25442 3268 868709 164000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1136) (undo-tree-id326 . -1) (#("u" 0 1 (fontified t)) . -1137) (undo-tree-id327 . -1) 1138) nil (25442 3268 868700 434000) 0 nil])
([nil nil ((1136 . 1141)) nil (25442 3268 868671 659000) 0 nil])
([nil nil ((1141 . 1143)) nil (25442 3268 868666 142000) 0 nil])
([nil nil ((1145 . 1148) (#("                         " 0 25 (fontified t)) . -1145) (1143 . 1144)) nil (25442 3268 868652 942000) 0 nil])
([nil nil ((878 . 883) (#("   " 0 3 (fontified t)) . -878) (#("     if (T != 4) total += T;
     else count++;
   }
   // cout << total << \" \" << count << \"\\n\";
   if (total % 4 == 0) count = count + (total / 4) + (total % 4);
   else if (total % 3 == 0) count = count + (total / 3) + (total % 3);
   else if (total < 4) count = 1;
   if (count < 1) count = 1;
   cout << count << \"\\n\";

   // cin >> a >> b >> c;
     // i = (a+b+c);
   // j = (a+b)*c;
   // k = a*(b+c);
   // l = (a*b*c);
   // // max = (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);
   // ans = (i > j) ? ((i > k) ? ((i > l) ? i : l) : k) : ((j > k) ? ((j > l) ? j : l) : ((k > l) ? k : l));
   // cout << ans << \"\\n\";

   // if (a == 1 && b == 1 && c == 1) {
   //   ans = 3;
   // } else if (a == b == c) {
   //   ans = a * b * c;
   // } else if (a == 1 || b == 1 || c == 1) {
   //   if (a != 1 && b != 1) {
   //     ans = a * (b + c);
   //   } else if (b != 1 && c != 1) {
   //     ans = (1 + b) * c;
   //   } else if (b == 1 && a != 1 && c != 1) {
   //     if (a < c) ans = (a + b) * c;
   //     else ans = a * (b + c);
   //   } else if (a == 1 && b == 1) {
   //     ans = 2 * c;
   //   } else if (a != 1 && b == 1 && c == 1) {
   //     ans = a * (b + c);
   //   } else ans = a + b + c;
   // } else {
   //   ans = a * b * c;
   // }
" 0 5 (fontified t) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t composition (9 2 [8800]) prettify-symbols-start 887 prettify-symbols-end 889) 12 13 (fontified t composition (9 2 [8800]) prettify-symbols-start 887 prettify-symbols-end 889) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 34 (fontified t) 34 38 (fontified t face font-lock-keyword-face) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 53 (fontified t) 53 56 (fontified t c-in-sws t c-is-sws t) 56 57 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 57 59 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 59 64 (fontified t c-in-sws t face font-lock-comment-face) 64 66 (fontified t c-in-sws t face font-lock-comment-face) 66 67 (fontified t c-in-sws t face font-lock-comment-face) 67 68 (fontified t c-in-sws t face font-lock-comment-face) 68 69 (fontified t c-in-sws t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 72 (fontified t c-in-sws t face font-lock-comment-face) 72 73 (fontified t c-in-sws t face font-lock-comment-face) 73 74 (fontified t c-in-sws t face font-lock-comment-face) 74 75 (fontified t c-in-sws t face font-lock-comment-face) 75 76 (fontified t c-in-sws t face font-lock-comment-face) 76 77 (fontified t c-in-sws t face font-lock-comment-face) 77 78 (fontified t c-in-sws t face font-lock-comment-face) 78 79 (fontified t c-in-sws t face font-lock-comment-face) 79 80 (fontified t c-in-sws t face font-lock-comment-face) 80 81 (fontified t c-in-sws t face font-lock-comment-face) 81 82 (fontified t c-in-sws t face font-lock-comment-face) 82 83 (fontified t c-in-sws t face font-lock-comment-face) 83 84 (fontified t c-in-sws t face font-lock-comment-face) 84 85 (fontified t c-in-sws t face font-lock-comment-face) 85 86 (fontified t c-in-sws t face font-lock-comment-face) 86 87 (fontified t c-in-sws t face font-lock-comment-face) 87 88 (fontified t c-in-sws t face font-lock-comment-face) 88 89 (fontified t c-in-sws t face font-lock-comment-face) 89 91 (fontified t c-in-sws t face font-lock-comment-face) 91 92 (fontified t c-in-sws t face font-lock-comment-face) 92 93 (fontified t c-in-sws t face font-lock-comment-face) 93 95 (fontified t c-in-sws t face font-lock-comment-face) 95 96 (fontified t c-in-sws t face font-lock-comment-face) 96 97 (fontified t c-in-sws t face font-lock-comment-face) 97 98 (fontified t face font-lock-comment-face c-in-sws t) 98 99 (fontified t c-is-sws t) 99 101 (fontified t c-is-sws t) 101 102 (c-is-sws t fontified t face font-lock-keyword-face) 102 103 (fontified t face font-lock-keyword-face) 103 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-2-face)) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-2-face)) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t face (rainbow-delimiters-depth-2-face)) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t face (rainbow-delimiters-depth-2-face)) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t face (rainbow-delimiters-depth-2-face)) 152 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t face (rainbow-delimiters-depth-2-face)) 162 163 (fontified t) 163 164 (fontified t) 164 167 (fontified t) 167 171 (fontified t face font-lock-keyword-face) 171 172 (fontified t) 172 173 (fontified t face font-lock-keyword-face) 173 174 (fontified t face font-lock-keyword-face) 174 175 (fontified t) 175 176 (fontified t face (rainbow-delimiters-depth-2-face)) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t face (rainbow-delimiters-depth-2-face)) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t face (rainbow-delimiters-depth-2-face)) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t face (rainbow-delimiters-depth-2-face)) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t face (rainbow-delimiters-depth-2-face)) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t face (rainbow-delimiters-depth-2-face)) 233 234 (fontified t) 234 235 (fontified t) 235 238 (fontified t) 238 242 (fontified t face font-lock-keyword-face) 242 243 (fontified t) 243 244 (fontified t face font-lock-keyword-face) 244 245 (fontified t face font-lock-keyword-face) 245 246 (fontified t) 246 247 (fontified t face (rainbow-delimiters-depth-2-face)) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t composition (4 1 [10216]) prettify-symbols-start 1129 prettify-symbols-end 1130) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t face (rainbow-delimiters-depth-2-face)) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 272 (fontified t) 272 273 (fontified t face font-lock-keyword-face) 273 274 (fontified t face font-lock-keyword-face) 274 275 (fontified t) 275 276 (fontified t face (rainbow-delimiters-depth-2-face)) 276 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t composition (4 1 [10216]) prettify-symbols-start 1158 prettify-symbols-end 1159) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t face (rainbow-delimiters-depth-2-face)) 286 287 (fontified t) 287 288 (fontified t) 288 289 (fontified t) 289 290 (fontified t) 290 291 (fontified t) 291 292 (fontified t) 292 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 298 (rear-nonsticky t fontified t) 298 301 (fontified t) 301 305 (fontified t) 305 306 (fontified t) 306 308 (fontified t composition (7 2 [10218]) prettify-symbols-start 1182 prettify-symbols-end 1184) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 317 (fontified t composition (7 2 [10218]) prettify-symbols-start 1191 prettify-symbols-end 1193) 317 318 (fontified t) 318 322 (fontified t face font-lock-string-face) 322 324 (fontified t) 324 328 (fontified t) 328 329 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 329 331 (fontified t face font-lock-comment-delimiter-face) 331 351 (fontified t face font-lock-comment-face) 351 356 (fontified t) 356 359 (fontified t face font-lock-comment-delimiter-face) 359 372 (fontified t face font-lock-comment-face) 372 375 (fontified t) 375 378 (fontified t face font-lock-comment-delimiter-face) 378 391 (fontified t face font-lock-comment-face) 391 394 (fontified t) 394 397 (fontified t face font-lock-comment-delimiter-face) 397 410 (fontified t face font-lock-comment-face) 410 413 (fontified t) 413 416 (fontified t face font-lock-comment-delimiter-face) 416 429 (fontified t face font-lock-comment-face) 429 432 (fontified t) 432 435 (fontified t face font-lock-comment-delimiter-face) 435 493 (fontified t face font-lock-comment-face) 493 496 (fontified t) 496 499 (fontified t face font-lock-comment-delimiter-face) 499 602 (fontified t face font-lock-comment-face) 602 605 (fontified t) 605 608 (fontified t face font-lock-comment-delimiter-face) 608 629 (fontified t face font-lock-comment-face) 629 633 (fontified t) 633 636 (fontified t face font-lock-comment-delimiter-face) 636 670 (fontified t face font-lock-comment-face) 670 673 (fontified t) 673 678 (fontified t face font-lock-comment-delimiter-face) 678 687 (fontified t face font-lock-comment-face) 687 690 (fontified t) 690 693 (fontified t face font-lock-comment-delimiter-face) 693 719 (fontified t face font-lock-comment-face) 719 722 (fontified t) 722 727 (fontified t face font-lock-comment-delimiter-face) 727 744 (fontified t face font-lock-comment-face) 744 747 (fontified t) 747 750 (fontified t face font-lock-comment-delimiter-face) 750 791 (fontified t face font-lock-comment-face) 791 794 (fontified t) 794 799 (fontified t face font-lock-comment-delimiter-face) 799 823 (fontified t face font-lock-comment-face) 823 826 (fontified t) 826 833 (fontified t face font-lock-comment-delimiter-face) 833 852 (fontified t face font-lock-comment-face) 852 855 (fontified t) 855 860 (fontified t face font-lock-comment-delimiter-face) 860 891 (fontified t face font-lock-comment-face) 891 894 (fontified t) 894 901 (fontified t face font-lock-comment-delimiter-face) 901 920 (fontified t face font-lock-comment-face) 920 923 (fontified t) 923 928 (fontified t face font-lock-comment-delimiter-face) 928 969 (fontified t face font-lock-comment-face) 969 972 (fontified t) 972 979 (fontified t face font-lock-comment-delimiter-face) 979 1009 (fontified t face font-lock-comment-face) 1009 1012 (fontified t) 1012 1019 (fontified t face font-lock-comment-delimiter-face) 1019 1043 (fontified t face font-lock-comment-face) 1043 1046 (fontified t) 1046 1051 (fontified t face font-lock-comment-delimiter-face) 1051 1082 (fontified t face font-lock-comment-face) 1082 1085 (fontified t) 1085 1092 (fontified t face font-lock-comment-delimiter-face) 1092 1105 (fontified t face font-lock-comment-face) 1105 1108 (fontified t) 1108 1113 (fontified t face font-lock-comment-delimiter-face) 1113 1154 (fontified t face font-lock-comment-face) 1154 1157 (fontified t) 1157 1164 (fontified t face font-lock-comment-delimiter-face) 1164 1183 (fontified t face font-lock-comment-face) 1183 1186 (fontified t) 1186 1191 (fontified t face font-lock-comment-delimiter-face) 1191 1215 (fontified t face font-lock-comment-face) 1215 1218 (fontified t) 1218 1221 (fontified t face font-lock-comment-delimiter-face) 1221 1230 (fontified t face font-lock-comment-face) 1230 1233 (fontified t) 1233 1238 (fontified t face font-lock-comment-delimiter-face) 1238 1255 (fontified t face font-lock-comment-face) 1255 1258 (fontified t) 1258 1261 (fontified t face font-lock-comment-delimiter-face) 1261 1263 (fontified t face font-lock-comment-face)) . 876) (undo-tree-id331 . -29) (undo-tree-id332 . -1263) (undo-tree-id333 . -163) (undo-tree-id334 . -97) (undo-tree-id335 . -97) (undo-tree-id336 . -297) (undo-tree-id337 . -269) (undo-tree-id338 . -1263) (t 25442 3269 269866 432000)) nil (25442 3430 531282 703000) 0 nil])
([nil nil ((882 . 885) (#("     " 0 5 (fontified t)) . -882) (876 . 879) (876 . 877) (#("}" 0 1 (fontified nil)) . -876) (876 . 877)) nil (25442 3430 531229 275000) 0 nil])
([nil nil ((875 . 876) (t 25442 3430 682325 319000)) nil (25442 3446 369835 894000) 0 nil])
([nil nil ((885 . 892) (#("   " 0 3 (fontified t)) . -885) (876 . 881) (876 . 879) (t 25442 3446 495572 985000)) nil (25442 4328 81659 498000) 0 nil])
([nil nil ((884 . 886)) nil (25442 4328 81652 165000) 0 nil])
([nil nil ((885 . 891)) nil (25442 4328 81647 276000) 0 nil])
([nil nil ((892 . 898)) nil (25442 4328 81642 387000) 0 nil])
([nil nil ((898 . 900) (899 . 918) (#("       " 0 7 (fontified t)) . -899) 898) nil (25442 4328 81636 660000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -898) (undo-tree-id370 . -1) (#("_" 0 1 (fontified t)) . -899) (undo-tree-id371 . -1) 900) nil (25442 4328 81628 419000) 0 nil])
([nil nil ((898 . 900)) nil (25442 4328 81617 384000) 0 nil])
([nil nil ((902 . 905) (#("                   " 0 19 (fontified t)) . -902) (900 . 901)) nil (25442 4328 81611 797000) 0 nil])
([nil nil ((901 . 907)) nil (25442 4328 81605 790000) 0 nil])
([nil nil ((907 . 911)) nil (25442 4328 81600 762000) 0 nil])
([nil nil ((913 . 920) (#("   " 0 3 (fontified t)) . -913) (911 . 912) (#(" x" 0 2 (fontified nil)) . -911) (911 . 913) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 911) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (907 . 911) 911) nil (25442 4328 81593 568000) 0 nil])
([nil nil ((912 . 916)) nil (25442 4328 81579 670000) 0 nil])
([nil nil ((917 . 922) (918 . 930) (#("       " 0 7 (fontified t)) . -918) (916 . 917)) nil (25442 4328 81573 943000) 0 nil])
([nil nil ((924 . 927) (#("            " 0 12 (fontified t)) . -924) (922 . 923)) nil (25442 4328 81566 749000) 0 nil])
([nil nil ((928 . 929)) nil (25442 4328 81560 603000) 0 nil])
([nil nil ((937 . 942) (#("   " 0 3 (fontified t)) . -937) (929 . 932) (929 . 932)) nil (25442 4328 81554 876000) 0 nil])
([nil nil ((935 . 937)) nil (25442 4328 81548 101000) 0 nil])
([nil nil ((936 . 939)) nil (25442 4328 81543 73000) 0 nil])
([nil nil ((936 . 941) (#("tot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -936) (undo-tree-id366 . -3) (undo-tree-id367 . -3) 939) nil (25442 4328 81536 997000) 0 nil])
([nil nil ((941 . 942)) nil (25442 4328 81525 752000) 0 nil])
([nil nil ((942 . 943)) nil (25442 4328 81520 863000) 0 nil])
([nil nil ((943 . 945)) nil (25442 4328 81515 905000) 0 nil])
([nil nil ((952 . 953) (954 . 974) (#("     " 0 5 (fontified t)) . -954) (946 . 952)) nil (25442 4328 81510 178000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -952) (undo-tree-id365 . -1) 953) nil (25442 4328 81502 565000) 0 nil])
([nil nil ((952 . 954)) nil (25442 4328 81493 905000) 0 nil])
([nil nil ((957 . 960) (#("                    " 0 20 (fontified t)) . -957) (954 . 955)) nil (25442 4328 81488 317000) 0 nil])
([nil nil ((955 . 956)) nil (25442 4328 81482 241000) 0 nil])
([nil nil ((956 . 960)) nil (25442 4328 81477 143000) 0 nil])
([nil nil ((966 . 971) (#("   " 0 3 (fontified t)) . -966) (963 . 964) (#(" x" 0 2 (fontified nil)) . -963) (956 . 959) (960 . 962) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 960) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (956 . 960) 960) nil (25442 4328 81470 89000) 0 nil])
([nil nil ((968 . 971) (#("     " 0 5 (fontified t)) . -968) (964 . 966)) nil (25442 4328 81455 422000) 0 nil])
([nil nil ((965 . 970)) nil (25442 4328 81449 346000) 0 nil])
([nil nil ((975 . 982) (#("   " 0 3 (fontified t)) . -975) (966 . 971) (966 . 969)) nil (25442 4328 81443 689000) 0 nil])
([nil nil ((974 . 976)) nil (25442 4328 81436 914000) 0 nil])
([nil nil ((975 . 977)) nil (25442 4328 81431 955000) 0 nil])
([nil nil ((975 . 980) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -975) (undo-tree-id361 . -2) (undo-tree-id362 . -2) 977) nil (25442 4328 81425 949000) 0 nil])
([nil nil ((980 . 985)) nil (25442 4328 81415 54000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -984) (undo-tree-id360 . -1) 985) nil (25442 4328 81409 187000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -984) (984 . 985) (#(")" 0 1 (fontified nil)) . -984) (984 . 985)) nil (25442 4328 81399 619000) 0 nil])
([nil nil ((987 . 992) (#("       " 0 7 (fontified t)) . -987) (985 . 986) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -985) (985 . 986)) nil (25442 4328 81392 6000) 0 nil])
([nil nil ((988 . 995) (#("     " 0 5 (fontified t)) . -988) (974 . 975)) nil (25442 4328 81384 254000) 0 nil])
([nil nil ((986 . 987)) nil (25442 4328 81378 178000) 0 nil])
([nil nil ((987 . 988)) nil (25442 4328 81373 79000) 0 nil])
([nil nil ((988 . 990)) nil (25442 4328 81368 120000) 0 nil])
([nil nil ((997 . 1000) (998 . 1026) (#("       " 0 7 (fontified t)) . -998) (991 . 997)) nil (25442 4328 81362 393000) 0 nil])
([nil nil ((1000 . 1008)) nil (25442 4328 81355 689000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1007) (undo-tree-id359 . -1) 1008) nil (25442 4328 81349 822000) 0 nil])
([nil nil ((1007 . 1008)) nil (25442 4328 81341 162000) 0 nil])
([nil nil ((1008 . 1010)) nil (25442 4328 81336 203000) 0 nil])
([nil nil ((1009 . 1012)) nil (25442 4328 81331 174000) 0 nil])
([nil nil ((1009 . 1014) (#("tot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1009) (undo-tree-id357 . -3) (undo-tree-id358 . -3) 1012) nil (25442 4328 81324 958000) 0 nil])
([nil nil ((1014 . 1015)) nil (25442 4328 81313 854000) 0 nil])
([nil nil ((1015 . 1016)) nil (25442 4328 81308 755000) 0 nil])
([nil nil ((1016 . 1018)) nil (25442 4328 81303 797000) 0 nil])
([nil nil ((1019 . 1023)) nil (25442 4328 81298 628000) 0 nil])
([nil nil ((1025 . 1028) (#("                            " 0 28 (fontified t)) . -1025) (1023 . 1024)) nil (25442 4328 81293 41000) 0 nil])
([nil nil ((1024 . 1025)) nil (25442 4328 81286 755000) 0 nil])
([nil nil ((1025 . 1029)) nil (25442 4328 81281 727000) 0 nil])
([nil nil ((1036 . 1043) (#("   " 0 3 (fontified t)) . -1036) (1034 . 1035) (#(" x" 0 2 (fontified nil)) . -1034) (1025 . 1030) (1029 . 1031) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1029) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (1025 . 1029) 1029) nil (25442 4328 81274 603000) 0 nil])
([nil nil ((1041 . 1053) (#("       " 0 7 (fontified t)) . -1041) (1035 . 1040)) nil (25442 4328 81259 378000) 0 nil])
([nil nil ((1040 . 1050)) nil (25442 4328 81253 231000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1049) (undo-tree-id354 . -1) 1050) nil (25442 4328 81247 295000) 0 nil])
([nil nil ((1049 . 1051)) nil (25442 4328 81238 495000) 0 nil])
([nil nil ((1051 . 1053)) nil (25442 4328 81233 466000) 0 nil])
([nil nil ((1052 . 1055)) nil (25442 4328 81228 438000) 0 nil])
([nil nil ((1052 . 1057) (#("tot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1052) (undo-tree-id352 . -3) (undo-tree-id353 . -3) 1055) nil (25442 4328 81222 222000) 0 nil])
([nil nil ((1057 . 1058)) nil (25442 4328 81210 978000) 0 nil])
([nil nil ((1058 . 1059)) nil (25442 4328 81206 19000) 0 nil])
([nil nil ((1059 . 1061)) nil (25442 4328 81201 130000) 0 nil])
([nil nil ((1062 . 1063)) nil (25442 4328 81196 101000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1062) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 1063) nil (25442 4328 81188 558000) 0 nil])
([nil nil ((1064 . 1067) (#("            " 0 12 (fontified t)) . -1064) (1062 . 1063)) nil (25442 4328 81131 987000) 0 nil])
([nil nil ((1069 . 1070) (t 25442 4328 164129 910000)) nil (25442 4340 431505 12000) 0 nil])
([nil nil ((1070 . 1074)) nil (25442 4340 431499 355000) 0 nil])
([nil nil ((1078 . 1083) (#("   " 0 3 (fontified t)) . -1078) (1070 . 1073) 1074) nil (25442 4340 431493 279000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1081 1086 nil nil nil t #s(yas--field 2 1091 1093 nil nil nil nil nil)) #s(yas--field 2 1091 1093 nil nil nil nil nil)) #s(yas--exit 1081 #s(yas--field 1 1081 1086 nil nil nil t #s(yas--field 2 1091 1093 nil nil nil nil nil))) 2 nil #s(yas--field 1 1081 1086 nil nil nil t #s(yas--field 2 1091 1093 nil nil nil nil nil)) nil nil)) (1073 . 1091) (#("cout" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1073) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) 1077) nil (25442 4340 431483 780000) 0 nil])
([nil nil ((1081 . 1086)) nil (25442 4340 431446 415000) 0 nil])
([nil nil ((apply yas--snippet-revive 1073 1096 #s(yas--snippet nil (#s(yas--field 1 1081 1086 nil nil nil t #s(yas--field 2 1091 1093 nil nil nil nil nil)) #s(yas--field 2 1091 1093 nil nil nil nil nil)) #s(yas--exit 1081 #s(yas--field 1 1081 1086 nil nil nil t #s(yas--field 2 1091 1093 nil nil nil nil nil))) 2 nil #s(yas--field 1 1081 1086 nil nil nil t #s(yas--field 2 1091 1093 nil nil nil nil nil)) nil nil))) nil (25442 4527 63603 919000) 0 nil])
([nil nil ((1101 . 1104) (#("     " 0 5 (fontified t)) . -1101) (968 . 975) (#("     " 0 5 (fontified t)) . -968) (964 . 966) (t 25442 4340 527396 266000)) nil (25442 4527 63594 560000) 0 nil])
([nil nil ((965 . 968)) nil (25442 4527 63581 639000) 0 nil])
([nil nil ((968 . 971)) nil (25442 4527 63574 236000) 0 nil])
([nil nil ((971 . 972)) nil (25442 4527 63566 623000) 0 nil])
([nil nil ((972 . 973)) nil (25442 4527 63559 220000) 0 nil])
([nil nil ((973 . 974)) nil (25442 4527 63551 607000) 0 nil])
([nil nil ((975 . 976)) nil (25442 4527 63544 65000) 0 nil])
([nil nil ((1085 . 1088) (1078 . 1083) (#("   " 0 3 (fontified t)) . 1078) (1082 . 1083)) nil (25442 4527 63535 334000) 0 nil])
([nil nil ((1088 . 1089)) nil (25442 4527 63524 90000) 0 nil])
([nil nil ((1089 . 1090) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1089) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (1085 . 1089) 1089) nil (25442 4527 63492 871000) 0 nil])
([nil nil ((1091 . 1100) (#("   " 0 3 (fontified t)) . -1091) (#(";" 0 1 (fontified t)) . -1089) (undo-tree-id453 . -1) (undo-tree-id454 . -1) 1090 (t 25442 4527 129718 687000)) nil (25442 4543 362744 427000) 0 nil])
([nil nil ((1089 . 1090) (#("else" 0 4 (fontified nil face font-lock-keyword-face)) . 1089) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (1085 . 1089) 1089) nil (25442 4543 362729 341000) 0 nil])
([nil nil ((1093 . 1096) (#("         " 0 9 (fontified t)) . -1093) (1090 . 1091)) nil (25442 4543 362690 998000) 0 nil])
([nil nil ((966 . 967) (980 . 985) (#("       " 0 7 (fontified t)) . -980) (964 . 966) (t 25442 4543 496296 689000)) nil (25442 4549 855821 116000) 0 nil])
([nil nil ((945 . 954) (t 25442 4549 989594 845000)) nil (25442 4602 470455 656000) 0 nil])
([nil nil ((#("toal " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -949) (undo-tree-id501 . -5) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) 954) nil (25442 4602 470443 294000) 0 nil])
([nil nil ((949 . 951)) nil (25442 4602 470335 110000) 0 nil])
([nil nil ((949 . 954) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -949) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) 951) nil (25442 4602 470323 586000) 0 nil])
([nil nil ((954 . 955)) nil (25442 4602 470210 792000) 0 nil])
([nil nil ((955 . 956)) nil (25442 4602 470205 344000) 0 nil])
([nil nil ((956 . 958)) nil (25442 4814 981925 959000) 0 nil])
([nil nil ((1053 . 1060) (#("     " 0 5 (fontified t)) . -1053) (992 . 999) (#("     " 0 5 (fontified t)) . -992) (#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . 977) (t 25442 4602 579309 942000)) nil (25442 4828 567273 471000) 0 nil] [nil nil ((#("((total % 4) > 0)" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-4-face)) 2 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-4-face)) 12 13 (fontified t) 13 14 (fontified t composition (3 1 [10217]) prettify-symbols-start 1015 prettify-symbols-end 1016) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-3-face))) . 1002) (undo-tree-id554 . -17) (undo-tree-id555 . -12) (undo-tree-id556 . -1) (undo-tree-id557 . 17) (undo-tree-id558 . -1) (undo-tree-id559 . 1) (undo-tree-id560 . -17) (undo-tree-id561 . -17) (t 25442 4602 579309 942000)) ((1002 . 1019)) (25442 4814 979501 558000) 0 nil])
([nil nil ((985 . 987) (#("       " 0 7 (fontified t)) . -985) (#(" (total" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 977)) nil (25442 4828 567264 601000) 0 nil])
nil
([nil nil ((#(" > 4" 0 1 (fontified t) 1 2 (fontified t composition (3 1 [10217]) prettify-symbols-start 978 prettify-symbols-end 979) 2 3 (fontified t) 3 4 (fontified t)) . 977)) nil (25442 4828 567257 966000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 977) (980 . 985) (#("  " 0 2 (fontified t)) . -980) (#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . 977)) nil (25442 4828 567251 751000) 0 nil])
([nil nil ((#(" else" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face)) . 1085) (undo-tree-id565 . -5)) nil (25442 4828 567243 649000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 1085) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (#(" " 0 1 (fontified t)) . 1085) (undo-tree-id564 . 1)) nil (25442 4828 567229 262000) 0 nil])
([nil nil ((1037 . 1042) (#("       " 0 7 (fontified t)) . -1037) (undo-tree-id566 . -6) (undo-tree-id567 . -6) (undo-tree-id568 . -6) (undo-tree-id569 . -6) (undo-tree-id570 . -6) (undo-tree-id571 . -6) (undo-tree-id572 . -6) (undo-tree-id573 . -6) (undo-tree-id574 . -6) (undo-tree-id575 . -6) (undo-tree-id576 . -6) (#("4" 0 1 (fontified t)) . -997) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 998 (t 25442 4828 701418 267000)) nil (25442 5047 960895 469000) 0 nil])
([nil nil ((997 . 998)) nil (25442 5047 960824 440000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -997) (undo-tree-id588 . -1) (undo-tree-id589 . -1) 998 (t 25442 5048 100229 681000)) nil (25442 5306 281124 945000) 0 nil])
([nil nil ((997 . 998)) nil (25442 5306 281113 351000) 0 nil])
([nil nil ((984 . 987)) nil (25442 5306 281108 392000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -985) (undo-tree-id586 . -1) (#("l" 0 1 (fontified t)) . -986) (undo-tree-id587 . -1) 987) nil (25442 5306 281101 967000) 0 nil])
([nil nil ((985 . 988)) nil (25442 5306 281090 94000) 0 nil])
([nil nil ((988 . 989) (#(" x" 0 2 (fontified nil)) . -988) (988 . 990) (#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 988) (undo-tree-id585 . -4) (984 . 988) 988) nil (25442 5306 281082 830000) 0 nil])
([nil nil ((978 . 979)) nil (25442 5306 281056 291000) 0 nil])
([nil nil ((985 . 987) (979 . 984) (979 . 980)) nil (25442 5306 283860 488000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1037 . 1038) (nil fontified nil 1037 . 1038) (nil fontified nil 1036 . 1037) (nil fontified nil 1035 . 1036) (nil fontified nil 1034 . 1035) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1023 . 1028) (nil fontified nil 1022 . 1023) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1019 . 1020) (nil fontified nil 1018 . 1019) (nil fontified nil 1017 . 1018) (nil fontified nil 1016 . 1017) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1013 . 1014) (nil fontified nil 1012 . 1013) (nil fontified nil 1011 . 1012) (nil fontified nil 1010 . 1011) (nil fontified nil 1009 . 1010) (nil fontified nil 1008 . 1009) (nil fontified nil 1007 . 1008) (nil fontified nil 1006 . 1007) (nil fontified nil 1005 . 1006) (nil fontified nil 1004 . 1005) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 1001 . 1002) (nil fontified nil 1000 . 1001) (nil fontified nil 999 . 1000) (nil fontified nil 998 . 999) (nil fontified nil 997 . 998) (nil fontified nil 996 . 997) (nil fontified nil 995 . 996) (nil fontified nil 990 . 995) (nil fontified nil 989 . 990) (nil fontified nil 988 . 989) (nil fontified nil 987 . 988) (987 . 1038)) nil (25442 5330 343403 777000) 0 nil] [nil nil ((987 . 989)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-3-face))) . 987) (undo-tree-id590 . -1) (undo-tree-id591 . -1)) (25442 5306 281037 573000) 0 nil])
([nil nil ((nil fontified nil 1031 . 1032) (#("4" 0 1 (fontified nil)) . -1031) (1032 . 1033) (nil fontified t 998 . 999) (#("4" 0 1 (fontified t)) . -998) (999 . 1000)) nil (25442 5330 343367 180000) 0 nil])
nil
([nil nil ((#("0" 0 1 (fontified t)) . 1001) (#(" " 0 1 (fontified t)) . 1001) (#(">" 0 1 (fontified t composition (3 1 [10217]) prettify-symbols-start 1001 prettify-symbols-end 1002)) . 1001) (t 25442 5330 468699 960000)) nil (25442 5404 931095 188000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1000) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 1001) nil (25442 5404 931086 528000) 0 nil])
([nil nil ((1000 . 1005)) nil (25442 5404 931052 26000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1034) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#("+" 0 1 (fontified t)) . -1035) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#(" " 0 1 (fontified t)) . -1036) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (#("1" 0 1 (fontified t)) . -1037) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (1039 . 1046) (#("     " 0 5 (fontified t)) . -1039) (undo-tree-id724 . -5) (#(";" 0 1 (rear-nonsticky t fontified t)) . -1038) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 1039 (t 25442 5405 81629 80000)) nil (25442 5422 204136 804000) 0 nil])
([nil nil ((1036 . 1041) (#("       " 0 7 (fontified t)) . -1036) (1034 . 1035)) nil (25442 5422 203087 649000) 0 nil])
([nil nil ((1034 . 1038) (t 25442 5422 601534 167000)) nil (25442 5456 984805 478000) 0 nil])
([nil nil ((apply -15 969 1165 undo--wrap-and-run-primitive-undo 969 1165 ((1158 . 1161) (1116 . 1119) (1049 . 1052) (985 . 988) (972 . 975) 969)) (t 25442 5457 131347 103000)) nil (25442 22750 665420 24000) 0 nil])
([nil nil ((968 . 969)) nil (25442 22750 665414 17000) 0 nil])
([nil nil ((969 . 973)) nil (25442 22750 665408 710000) 0 nil])
([nil nil ((978 . 983) (#("   " 0 3 (c-in-sws t c-is-sws t fontified t)) . -978) (976 . 977) (#(" x" 0 2 (fontified nil)) . -976) (969 . 972) (973 . 975) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 973) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (969 . 973) 973) nil (25442 22750 665400 748000) 0 nil])
([nil nil ((977 . 980)) nil (25442 22750 665353 46000) 0 nil])
([nil nil ((980 . 982)) nil (25442 22750 665348 227000) 0 nil])
([nil nil ((981 . 995)) nil (25442 22750 665343 338000) 0 nil])
([nil nil ((996 . 997)) nil (25442 22750 665338 379000) 0 nil])
([nil nil ((1000 . 1003) (#("     " 0 5 (c-in-sws t c-is-sws t fontified t)) . -1000) (997 . 999)) nil (25442 22750 665332 722000) 0 nil])
([nil nil ((999 . 1004) (998 . 1003)) nil (25442 22750 665326 576000) 0 nil])
([nil nil ((1008 . 1015) (#("   " 0 3 (fontified t)) . -1008) (1004 . 1007)) nil (25442 22750 665320 221000) 0 nil])
([nil nil ((1007 . 1009)) nil (25442 22750 665314 5000) 0 nil])
([nil nil ((1008 . 1022)) nil (25442 22750 665309 46000) 0 nil])
([nil nil ((1023 . 1024)) nil (25442 22750 665304 87000) 0 nil])
([nil nil ((1027 . 1030) (#("       " 0 7 (fontified t)) . -1027) (1024 . 1026)) nil (25442 22750 665298 430000) 0 nil])
([nil nil ((1026 . 1033) (1025 . 1032)) nil (25442 22750 665292 214000) 0 nil])
([nil nil ((1038 . 1040) (1039 . 1048) (#("     " 0 5 (fontified t)) . -1039) (1033 . 1038)) nil (25442 22750 665285 929000) 0 nil])
([nil nil ((1034 . 1039) (#("         " 0 9 (fontified t)) . -1034) (#("coutnt " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -1033) (undo-tree-id806 . -4) (undo-tree-id807 . -7) 1040) nil (25442 22750 665277 967000) 0 nil])
([nil nil ((1033 . 1036)) nil (25442 22750 665266 443000) 0 nil])
([nil nil ((1039 . 1048) (#("     " 0 5 (fontified t)) . -1039) (1033 . 1038) (#("cou" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1033) (undo-tree-id804 . -3) (undo-tree-id805 . -3) 1036) nil (25442 22750 665259 808000) 0 nil])
([nil nil ((1038 . 1043)) nil (25442 22750 665247 655000) 0 nil])
([nil nil ((1043 . 1049)) nil (25442 22750 665242 767000) 0 nil])
([nil nil ((1049 . 1051)) nil (25442 22750 665237 389000) 0 nil])
([nil nil ((1050 . 1056)) nil (25442 22750 665232 360000) 0 nil])
([nil nil ((1056 . 1059)) nil (25442 22750 665227 332000) 0 nil])
([nil nil ((1062 . 1067) (#("         " 0 9 (fontified t)) . -1062) (1060 . 1061)) nil (25442 22750 665221 535000) 0 nil])
([nil nil ((1068 . 1073)) nil (25442 22750 665215 179000) 0 nil])
([nil nil ((1075 . 1082) (#("   " 0 3 (fontified t)) . -1075) (1073 . 1074) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1073) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -2) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -3) (undo-tree-id782 . -3) (undo-tree-id783 . -3) (undo-tree-id784 . -3) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) (undo-tree-id789 . -3) (undo-tree-id790 . -3) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (1069 . 1073) 1073) nil (25442 22750 665201 71000) 0 nil])
([nil nil ((1077 . 1080) (#("       " 0 7 (fontified t)) . -1077) (1074 . 1076)) nil (25442 22750 665036 665000) 0 nil])
([nil nil ((1076 . 1083) (1075 . 1082)) nil (25442 22750 673994 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1110 . 1111) (nil fontified nil 1110 . 1111) (nil fontified nil 1109 . 1110) (nil fontified nil 1108 . 1109) (nil fontified nil 1107 . 1108) (nil fontified nil 1106 . 1107) (nil fontified nil 1105 . 1106) (nil fontified nil 1104 . 1105) (nil fontified nil 1103 . 1104) (nil fontified nil 1102 . 1103) (nil fontified nil 1101 . 1102) (nil fontified nil 1100 . 1101) (nil fontified nil 1099 . 1100) (nil fontified nil 1098 . 1099) (nil fontified nil 1097 . 1098) (nil fontified nil 1096 . 1097) (nil fontified nil 1095 . 1096) (nil fontified nil 1094 . 1095) (nil fontified nil 1093 . 1094) (nil fontified nil 1092 . 1093) (nil fontified nil 1091 . 1092) (nil fontified nil 1090 . 1091) (nil fontified nil 1089 . 1090) (nil fontified nil 1088 . 1089) (nil fontified nil 1083 . 1088) (1083 . 1111)) nil (25442 22758 904688 565000) 0 nil] [nil nil ((1089 . 1098) (#("     " 0 5 (fontified t)) . -1089) (1083 . 1088)) ((#("coutn" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 1083) (undo-tree-id810 . -4) (undo-tree-id811 . -5) (undo-tree-id812 . -5) (1089 . 1094) (#("         " 0 9 (fontified t)) . 1089)) (25442 22750 665015 433000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1108) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) 1109) nil (25442 22758 904666 705000) 0 nil])
nil
([nil nil ((1108 . 1109)) nil (25442 22758 904618 374000) 0 nil])
([nil nil ((1123 . 1128) (t 25442 22759 14281 423000)) nil (25442 22775 973646 248000) 0 nil])
([nil nil ((1130 . 1135) (#("   " 0 3 (fontified t)) . -1130) (1128 . 1129) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1128) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (1124 . 1128) 1128) nil (25442 22775 973638 565000) 0 nil])
([nil nil ((1132 . 1135) (#("     " 0 5 (fontified t c-in-sws t c-is-sws t)) . -1132) (1129 . 1131)) nil (25442 22775 973609 371000) 0 nil])
([nil nil ((1131 . 1136) (1130 . 1135)) nil (25442 22776 384927 221000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1163 . 1164) (nil fontified nil 1163 . 1164) (nil fontified nil 1162 . 1163) (nil fontified nil 1161 . 1162) (nil fontified nil 1160 . 1161) (nil fontified nil 1159 . 1160) (nil fontified nil 1158 . 1159) (nil fontified nil 1157 . 1158) (nil fontified nil 1156 . 1157) (nil fontified nil 1155 . 1156) (nil fontified nil 1154 . 1155) (nil fontified nil 1153 . 1154) (nil fontified nil 1152 . 1153) (nil fontified nil 1151 . 1152) (nil fontified nil 1150 . 1151) (nil fontified nil 1149 . 1150) (nil fontified nil 1148 . 1149) (nil fontified nil 1147 . 1148) (nil fontified nil 1146 . 1147) (nil fontified nil 1145 . 1146) (nil fontified nil 1144 . 1145) (nil fontified nil 1143 . 1144) (nil fontified nil 1142 . 1143) (nil fontified nil 1141 . 1142) (nil fontified nil 1136 . 1141) (1136 . 1164)) nil (25442 22781 406905 238000) 0 nil] [nil nil ((1136 . 1139)) ((#("cou" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 1136) (undo-tree-id825 . -3) (undo-tree-id826 . -3) (undo-tree-id827 . -3) (undo-tree-id828 . -3) (undo-tree-id829 . -3) (undo-tree-id830 . -3) (undo-tree-id831 . -3) (undo-tree-id832 . -3) (undo-tree-id833 . -3) (undo-tree-id834 . -3) (undo-tree-id835 . -3)) (25442 22775 976635 944000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1161) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) 1162) nil (25442 22781 406884 76000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1166 . 1167) (nil fontified nil 1166 . 1167) (nil fontified nil 1165 . 1166) (nil fontified nil 1164 . 1165) (nil fontified nil 1163 . 1164) (nil fontified nil 1162 . 1163) (nil fontified nil 1161 . 1162) (nil fontified nil 1160 . 1161) (nil fontified nil 1159 . 1160) (nil fontified nil 1158 . 1159) (nil fontified nil 1157 . 1158) (nil fontified nil 1156 . 1157) (nil fontified nil 1155 . 1156) (nil fontified nil 1154 . 1155) (nil fontified nil 1153 . 1154) (nil fontified nil 1152 . 1153) (nil fontified nil 1151 . 1152) (nil fontified nil 1150 . 1151) (nil fontified nil 1149 . 1150) (nil fontified nil 1148 . 1149) (nil fontified nil 1147 . 1148) (nil fontified nil 1146 . 1147) (nil fontified nil 1145 . 1146) (nil fontified nil 1144 . 1145) (nil fontified nil 1139 . 1144) (1139 . 1167)) ((#("count = count + (total % 4);" 0 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-depth-3-face)) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil face (rainbow-delimiters-depth-3-face)) 27 28 (fontified nil rear-nonsticky nil)) . 1139) (undo-tree-id823 . -28) (undo-tree-id824 . -28) (nil rear-nonsticky t 1166 . 1167)) (25442 22775 973581 714000) 0 nil])
([nil nil ((1161 . 1162)) nil (25442 22781 406838 610000) 0 nil])
nil
([nil nil ((#("%" 0 1 (fontified t)) . -1056) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) 1057 (t 25442 22781 504159 585000)) nil (25442 22853 681604 731000) 0 nil])
([nil nil ((1056 . 1057)) nil (25442 22853 681581 404000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -1106) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) 1107) nil (25442 22853 681573 303000) 0 nil])
([nil nil ((1106 . 1107)) nil (25442 22853 681523 925000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -1159) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) 1160) nil (25442 22853 681516 242000) 0 nil])
([nil nil ((1159 . 1160)) nil (25442 22853 681469 728000) 0 nil])
([nil nil ((928 . 929) (t 25442 22853 783768 12000)) nil (25442 23053 65213 189000) 0 nil])
([nil nil ((935 . 936) (#("     " 0 5 (fontified nil)) . 1077) (1039 . 1048) (#("       " 0 7 (fontified nil)) . 1039) (undo-tree-id881 . -7) (1010 . 1017) (#("     " 0 5 (fontified nil)) . 1010) (978 . 983) (#("   " 0 3 (fontified nil)) . 978) (936 . 941) (933 . 935) (#("   " 0 3 (fontified t)) . -934) (929 . 932) (929 . 930)) nil (25442 23053 65204 808000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--exit 940 #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil))) 4 nil #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) nil nil)) (932 . 950) (#("cout" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 932) (undo-tree-id880 . -4) 936) nil (25442 23053 65188 954000) 0 nil])
([nil nil ((940 . 946)) nil (25442 23053 65164 20000) 0 nil])
([nil nil ((946 . 948)) nil (25442 23053 65158 992000) 0 nil])
([nil nil ((948 . 954)) nil (25442 23053 65154 33000) 0 nil])
([nil nil ((952 . 953) (nil syntax-table nil 964 . 965) (nil syntax-table (15) 966 . 967) (nil syntax-table (15) 964 . 965) (nil syntax-table nil 966 . 967) (nil syntax-table (1) 964 . 965) (951 . 952) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -951) (nil syntax-table nil 964 . 965) (nil syntax-table (15) 966 . 967) (nil syntax-table (15) 964 . 965) (nil syntax-table nil 966 . 967) (nil syntax-table (1) 964 . 965) (951 . 952) (nil syntax-table nil 963 . 964) (nil syntax-table (15) 965 . 966) (nil syntax-table (15) 963 . 964) (nil syntax-table nil 965 . 966) (nil syntax-table (1) 963 . 964) (949 . 951) (nil syntax-table nil 961 . 962) (nil syntax-table (15) 963 . 964) (nil syntax-table (15) 961 . 962) (nil syntax-table nil 963 . 964) (nil syntax-table (1) 961 . 962) (#("\"" 0 1 (fontified nil)) . -949) (949 . 950)) nil (25442 23053 65144 814000) 0 nil])
([nil nil ((953 . 955)) nil (25442 23053 65125 957000) 0 nil])
([nil nil ((955 . 956)) nil (25442 23053 65113 595000) 0 nil])
([nil nil ((apply yas--snippet-revive 932 971 #s(yas--snippet nil (#s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--field 2 966 968 nil nil nil nil nil)) #s(yas--exit 940 #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil))) 4 nil #s(yas--field 1 940 961 nil nil nil t #s(yas--field 2 966 968 nil nil nil nil nil)) nil nil))) nil (25442 23637 753392 976000) 0 nil])
([nil nil ((1107 . 1112) (#("       " 0 7 (fontified nil)) . -1107) (1042 . 1047) (#("       " 0 7 (fontified nil)) . 1042) (1012 . 1015) (#("     " 0 5 (fontified nil)) . 1012) (972 . 975) (#("     " 0 5 (fontified nil)) . 972) (1129 . 1138) (#("       " 0 7 (fontified t)) . -1129) (undo-tree-id885 . -7) (1113 . 1120) 1114 (t 25442 23053 159354 569000)) nil (25442 23643 619221 403000) 0 nil] [nil nil ((1474 . 1477) (1459 . 1464) (#("   " 0 3 (fontified nil)) . 1459) (1430 . 1435) (#("   " 0 3 (fontified nil c-is-sws t c-in-sws t)) . 1430) (1417 . 1422) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1417) (1373 . 1378) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1373) (1304 . 1309) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1304) (1238 . 1243) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1238) (1223 . 1228) (#("   " 0 3 (fontified nil c-in-sws t c-is-sws t)) . 1223) (1216 . 1221) (#("   " 0 3 (fontified nil)) . 1216) (1180 . 1187) (#("     " 0 5 (fontified nil)) . 1180) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (1166 . 1171) (#("   " 0 3 (fontified nil)) . 1166) (1157 . 1164) (#("     " 0 5 (fontified nil)) . 1157) (1119 . 1128) (#("   " 0 3 (fontified nil)) . 1119) (1105 . 1112) (#(" " 0 1 (fontified nil)) . 1105) (1069 . 1076) (#("         " 0 9 (fontified nil)) . 1069) (1042 . 1047) (#("       " 0 7 (fontified nil)) . 1042) (1012 . 1015) (#("     " 0 5 (fontified nil)) . 1012) (972 . 975) (#("     " 0 5 (fontified nil)) . -972) (1121 . 1124) (#("       " 0 7 (fontified t)) . -1121) (undo-tree-id884 . -7) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1113) (t 25442 23053 159354 569000)) ((1113 . 1114) (1121 . 1128) (#("   " 0 3 (fontified nil)) . 1121) (972 . 977) (#("   " 0 3 (fontified nil)) . 972) (1012 . 1017) (#("   " 0 3 (fontified nil)) . 1012) (1042 . 1049) (#("     " 0 5 (fontified nil)) . 1042) (1069 . 1078) (#("       " 0 7 (fontified nil)) . 1069) (1105 . 1106) (#("       " 0 7 (fontified nil)) . 1105) (1119 . 1122) (#("         " 0 9 (fontified nil)) . 1119) (1157 . 1162) (#("       " 0 7 (fontified nil)) . 1157) (1166 . 1169) (#("     " 0 5 (fontified nil)) . 1166) (1180 . 1185) (#("       " 0 7 (fontified nil)) . 1180) (1216 . 1219) (#("     " 0 5 (fontified nil)) . 1216) (1223 . 1226) (#("     " 0 5 (fontified nil c-in-sws t c-is-sws t)) . 1223) (1238 . 1241) (#("     " 0 5 (fontified nil c-in-sws t)) . 1238) (1304 . 1307) (#("     " 0 5 (fontified nil c-in-sws t)) . 1304) (1373 . 1376) (#("     " 0 5 (fontified nil c-in-sws t)) . 1373) (1417 . 1420) (#("     " 0 5 (fontified nil c-in-sws t)) . 1417) (1430 . 1433) (#("     " 0 5 (fontified nil c-is-sws t c-in-sws t)) . 1430) (1459 . 1462) (#("     " 0 5 (fontified nil)) . 1459) (#("   " 0 3 (fontified t)) . 1474)) (25442 23637 563257 536000) 0 nil])
([nil nil ((1071 . 1078) (#("         " 0 9 (fontified t)) . -1071) (1051 . 1053) (t 25442 23643 672822 149000)) nil (25442 23679 176794 956000) 0 nil])
nil
([nil nil ((1052 . 1053)) nil (25442 23679 176788 181000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -1052) (undo-tree-id889 . -1) (undo-tree-id890 . -1) 1053) nil (25442 23679 176782 314000) 0 nil])
([nil nil ((1052 . 1054)) nil (25442 23679 176771 349000) 0 nil])
([nil nil ((1052 . 1057) (#("to" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face)) . -1052) (undo-tree-id887 . -2) (undo-tree-id888 . -2) 1054) nil (25442 23679 176765 273000) 0 nil])
([nil nil ((1057 . 1059)) nil (25442 23679 176753 400000) 0 nil])
([nil nil ((#("total" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 1060) (undo-tree-id886 . -5)) nil (25442 23679 176747 533000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . 1063)) nil (25442 23679 176723 89000) 0 nil])
([nil nil ((1063 . 1064)) nil (25442 23679 176711 76000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1105) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) 1106 (t 25442 23679 265962 658000)) nil (25442 23685 59362 105000) 0 nil])
([nil nil ((1105 . 1106)) nil (25442 23685 59291 565000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1156) (undo-tree-id911 . 1) (#(" " 0 1 (fontified t)) . 1156) (t 25442 23685 162597 380000)) nil (25442 23690 707361 204000) 0 nil])
([nil nil ((1155 . 1156) (1123 . 1130) (#("         " 0 9 (fontified t)) . 1123) (1156 . 1157)) nil (25442 23690 707326 772000) 0 nil])
([nil nil ((1110 . 1113) (#("     " 0 5 (fontified t)) . -1110) (1102 . 1103) (#(")" 0 1 (fontified nil)) . -1102) (1102 . 1103) (t 25442 23690 765900 358000)) nil (25442 23757 717080 36000) 0 nil])
([nil nil ((1102 . 1104)) nil (25442 23757 717071 655000) 0 nil])
([nil nil ((1113 . 1118) (#("   " 0 3 (fontified t)) . -1113) (1097 . 1098)) nil (25442 23757 717058 36000) 0 nil])
([nil nil ((#("0) {
" 0 1 (fontified nil) 1 2 (fontified nil face (rainbow-delimiters-depth-2-face)) 2 3 (fontified nil) 3 4 (fontified nil face (rainbow-delimiters-depth-2-face)) 4 5 (fontified nil)) . 1012) (undo-tree-id932 . -5) (#("   else if (total % 2 == " 0 3 (fontified t) 3 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t)) . -1012) (undo-tree-id933 . -25) 1037 (t 25442 23757 818870 434000)) nil (25442 23873 567191 626000) 0 nil])
([nil nil ((1041 . 1049) (#("       " 0 7 (fontified t)) . -1041) (#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . -1017) (undo-tree-id931 . -2) 1019) nil (25442 23873 567178 7000) 0 nil])
([nil nil ((1043 . 1050) (#("     " 0 5 (fontified t)) . -1043) (1016 . 1019) (1040 . 1045) (#("        " 0 8 (fontified nil)) . -1040) (1012 . 1015) (#("     " 0 5 (fontified t)) . 1012) (1017 . 1018)) nil (25442 23873 567166 692000) 0 nil])
([nil nil ((1019 . 1020) (#(" x" 0 2 (fontified nil)) . -1019) (1019 . 1021) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1019) (undo-tree-id930 . -4) (1015 . 1019) 1019) nil (25442 23873 567156 216000) 0 nil])
([nil nil ((1046 . 1051) (#("       " 0 7 (fontified t)) . -1046) (1020 . 1022)) nil (25442 23873 567144 623000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -1091) (#(" else {
       count = count + (total / 4);
     }" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 15 (fontified t) 15 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-3-face)) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-3-face)) 42 43 (rear-nonsticky t fontified t) 43 44 (fontified t) 44 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-2-face))) . 1090) (undo-tree-id922 . -44) (undo-tree-id923 . -8) (undo-tree-id924 . -50) (undo-tree-id925 . -50) (undo-tree-id926 . 1) (undo-tree-id927 . -50) (undo-tree-id928 . 44) (undo-tree-id929 . -7) 1140) nil (25442 23873 567136 242000) 0 nil])
([nil nil ((1099 . 1102) (#("     " 0 5 (fontified t)) . -1099) (undo-tree-id920 . -5) (undo-tree-id921 . -5) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1091)) nil (25442 23873 567111 797000) 0 nil])
([nil nil ((1130 . 1131) (#("   " 0 3 (fontified t)) . -1130) (#("3" 0 1 (fontified t)) . -1127) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) 1128) nil (25442 23873 567096 432000) 0 nil])
([nil nil ((1127 . 1128)) nil (25442 23873 567048 661000) 0 nil])
([nil nil ((1101 . 1106) (#("   " 0 3 (fontified t)) . -1101) (1091 . 1094) (#(" " 0 1 (fontified t)) . 1091) 1098 (t 25442 23873 671576 139000)) nil (25442 23880 501744 681000) 0 nil])
([nil nil ((1135 . 1138) (#(" " 0 1 (fontified t)) . 1135) 1137) nil (25442 23880 501728 548000) 0 nil])
([nil nil ((1084 . 1087) (#("     " 0 5 (fontified t)) . 1084) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) 1088 (t 25442 23880 551538 867000)) nil (25442 23888 622717 371000) 0 nil])
([nil nil ((1088 . 1093) (t 25442 23883 924853 926000)) nil (25442 24007 211099 95000) 0 nil] [nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 979 988 nil nil nil nil #s(yas--field 2 990 1002 nil nil nil nil #s(yas--exit 997 nil))) #s(yas--field 2 990 1002 nil nil nil nil #s(yas--exit 997 nil))) #s(yas--exit 997 nil) 7 nil #s(yas--field 1 979 988 nil nil nil nil #s(yas--field 2 990 1002 nil nil nil nil #s(yas--exit 997 nil))) nil nil)) (998 . 1001) (992 . 997) (#("    " 0 4 (fontified nil)) . -992) (undo-tree-id941 . -4) (975 . 998) (#("if" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face)) . 975) (undo-tree-id942 . -2) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) 977 (t 25442 23883 924853 926000)) ((975 . 977) (#("if (condition) {
    
}" 0 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil) 3 4 (fontified nil face (rainbow-delimiters-depth-2-face)) 4 13 (fontified nil) 13 14 (fontified nil face (rainbow-delimiters-depth-2-face)) 14 15 (fontified nil) 15 16 (fontified nil face (rainbow-delimiters-depth-2-face)) 16 17 (fontified nil) 17 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil face (rainbow-delimiters-depth-2-face))) . 975) (undo-tree-id949 . -17) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (992 . 996) (#("     " 0 5 (fontified nil)) . 992) (#("   " 0 3 (fontified t)) . 998) (apply yas--snippet-revive 975 1002 #s(yas--snippet nil (#s(yas--field 1 979 988 nil nil nil nil #s(yas--field 2 990 1002 nil nil nil nil #s(yas--exit 997 nil))) #s(yas--field 2 990 1002 nil nil nil nil #s(yas--exit 997 nil))) #s(yas--exit 997 nil) 7 nil #s(yas--field 1 979 988 nil nil nil nil #s(yas--field 2 990 1002 nil nil nil nil #s(yas--exit 997 nil))) nil nil))) (25442 23888 597952 837000) 0 nil])
([nil nil ((1093 . 1094) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1093) (undo-tree-id975 . -4) (1089 . 1093) 1093) nil (25442 24007 211092 390000) 0 nil])
nil
([nil nil ((1142 . 1145) (#("     " 0 5 (fontified nil)) . 1142) (1108 . 1113) (#("       " 0 7 (fontified nil)) . 1108) (1098 . 1101) (1096 . 1097) (#("     " 0 5 (fontified t)) . -1097) (1095 . 1096) (1144 . 1149) (#("   " 0 3 (fontified nil)) . 1144) (1108 . 1115) (#("     " 0 5 (fontified nil)) . 1108) (1096 . 1101) (#("   " 0 3 (fontified t)) . -1096) (1094 . 1095)) nil (25442 24007 211076 746000) 0 nil])
([nil nil ((1097 . 1099)) nil (25442 24007 211064 35000) 0 nil])
([nil nil ((1098 . 1101)) nil (25442 24007 211058 936000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1100) (undo-tree-id974 . -1) 1101) nil (25442 24007 211052 650000) 0 nil])
([nil nil ((1098 . 1103) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1098) (undo-tree-id972 . -2) (undo-tree-id973 . -2) 1100) nil (25442 24007 211042 244000) 0 nil])
([nil nil ((1103 . 1112)) nil (25442 24007 211030 231000) 0 nil])
([nil nil ((1113 . 1114)) nil (25442 24007 211025 133000) 0 nil])
([nil nil ((1114 . 1116)) nil (25442 24007 211019 895000) 0 nil])
([nil nil ((1116 . 1121) (1115 . 1120)) nil (25442 24007 211014 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1152 . 1153) (nil fontified nil 1152 . 1153) (nil fontified nil 1151 . 1152) (nil fontified nil 1150 . 1151) (nil fontified nil 1149 . 1150) (nil fontified nil 1148 . 1149) (nil fontified nil 1147 . 1148) (nil fontified nil 1146 . 1147) (nil fontified nil 1145 . 1146) (nil fontified nil 1144 . 1145) (nil fontified nil 1143 . 1144) (nil fontified nil 1142 . 1143) (nil fontified nil 1141 . 1142) (nil fontified nil 1140 . 1141) (nil fontified nil 1139 . 1140) (nil fontified nil 1138 . 1139) (nil fontified nil 1137 . 1138) (nil fontified nil 1136 . 1137) (nil fontified nil 1135 . 1136) (nil fontified nil 1134 . 1135) (nil fontified nil 1133 . 1134) (nil fontified nil 1132 . 1133) (nil fontified nil 1131 . 1132) (nil fontified nil 1130 . 1131) (nil fontified nil 1129 . 1130) (nil fontified nil 1128 . 1129) (nil fontified nil 1127 . 1128) (nil fontified nil 1126 . 1127) (nil fontified nil 1121 . 1126) (1121 . 1153)) nil (25442 24007 211005 508000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1145)) nil (25442 24007 210984 346000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -1144) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) 1145) nil (25442 24007 210971 774000) 0 nil])
([nil nil ((1011 . 1012) (t 25442 24007 594183 951000)) nil (25442 24234 333548 904000) 0 nil])
([nil nil ((1016 . 1018) (1012 . 1015) (1012 . 1013)) nil (25442 24234 333543 107000) 0 nil])
([nil nil ((1018 . 1020)) nil (25442 24234 333536 961000) 0 nil])
([nil nil ((1019 . 1023)) nil (25442 24234 333531 932000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1022) (undo-tree-id987 . -1) 1023) nil (25442 24234 333525 856000) 0 nil])
([nil nil ((1019 . 1024) (#("tot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1019) (undo-tree-id985 . -3) (undo-tree-id986 . -3) 1022) nil (25442 24234 333515 659000) 0 nil])
([nil nil ((1024 . 1033)) nil (25442 24234 333504 694000) 0 nil])
([nil nil ((#(")
" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face)) 1 2 (fontified nil)) . 1012) (undo-tree-id982 . -2) (#("   if (total % 2 == 0" 0 3 (fontified t) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-2-face)) 7 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) . -1012) (undo-tree-id983 . -7) (undo-tree-id984 . -21) 1033) nil (25442 24234 333498 269000) 0 nil])
([nil nil ((#("     count = count + (total / 4);
" 0 5 (fontified t) 5 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-3-face)) 32 33 (rear-nonsticky t fontified t) 33 34 (fontified t)) . 1167) (undo-tree-id981 . -34)) nil (25442 24234 333484 440000) 0 nil])
([nil nil ((1199 . 1202) (#("     " 0 5 (fontified nil)) . 1199) (1189 . 1192) (#("     " 0 5 (fontified nil)) . -1189) (1184 . 1187) (#("     " 0 5 (fontified nil)) . 1184) (1148 . 1153) (#("       " 0 7 (fontified nil)) . 1148) (1116 . 1119) (#("     " 0 5 (fontified nil)) . 1116) (1078 . 1083) (#("       " 0 7 (fontified nil)) . 1078) (1044 . 1047) (#("     " 0 5 (fontified nil)) . -1044) (1012 . 1015) (#("     " 0 5 (fontified nil)) . 1012) (1213 . 1218) (#("   " 0 3 (fontified nil)) . 1213) (1201 . 1206) (#("   " 0 3 (fontified nil)) . -1201) (1194 . 1199) (#("   " 0 3 (fontified nil)) . 1194) (1156 . 1163) (#("     " 0 5 (fontified nil)) . 1156) (undo-tree-id979 . -5) (1122 . 1127) (#("   " 0 3 (fontified nil)) . 1122) (1082 . 1089) (#("     " 0 5 (fontified nil)) . 1082) (undo-tree-id980 . -5) (1046 . 1051) (#("   " 0 3 (fontified t)) . -1046) (nil rear-nonsticky nil 1045 . 1046) (nil fontified nil 1045 . 1046) (nil fontified nil 1044 . 1045) (nil fontified nil 1043 . 1044) (nil fontified nil 1042 . 1043) (nil fontified nil 1041 . 1042) (nil fontified nil 1040 . 1041) (nil fontified nil 1039 . 1040) (nil fontified nil 1038 . 1039) (nil fontified nil 1037 . 1038) (nil fontified nil 1036 . 1037) (nil fontified nil 1035 . 1036) (nil fontified nil 1034 . 1035) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1027 . 1028) (nil fontified nil 1026 . 1027) (nil fontified nil 1025 . 1026) (nil fontified nil 1024 . 1025) (nil fontified nil 1023 . 1024) (nil fontified nil 1022 . 1023) (nil fontified nil 1017 . 1022) (nil fontified nil 1012 . 1017) (1012 . 1046)) nil (25442 24234 333466 282000) 0 nil])
([nil nil ((1012 . 1013)) nil (25442 24234 333427 520000) 0 nil])
([nil nil ((1016 . 1017) (1017 . 1022) (#("   " 0 3 (fontified nil)) . -1017) (1012 . 1015) (1012 . 1013)) nil (25442 24234 333421 513000) 0 nil])
([nil nil ((1017 . 1018)) nil (25442 24235 248284 871000) 0 nil])
([nil nil ((1018 . 1020)) nil (25442 24321 582315 451000) 0 nil] [nil nil ((1018 . 1020)) ((#("()" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face))) . 1018) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1)) (25442 24234 792529 523000) 0 nil])
([nil nil ((1019 . 1023)) nil (25442 24321 582310 283000) 0 nil])
([nil nil ((1019 . 1021)) ((#("to" 0 1 (fontified t) 1 2 (fontified t)) . 1019) (undo-tree-id990 . -2) (undo-tree-id991 . -2) (undo-tree-id992 . -2) (undo-tree-id993 . -2) (undo-tree-id994 . -2) (undo-tree-id995 . -2) (undo-tree-id996 . -2) (undo-tree-id997 . -2) (undo-tree-id998 . -2) (undo-tree-id999 . -2)) (25442 24234 344096 755000) 0 nil])
([nil nil ((1019 . 1024) (#("tota" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1019) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) 1023) nil (25442 24321 582304 67000) 0 nil])
([nil nil ((1019 . 1024) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1019) (undo-tree-id976 . -2) (undo-tree-id977 . -2) (undo-tree-id978 . -2) 1021) ((1019 . 1021) (#("total" 0 5 (fontified t)) . 1019) (undo-tree-id988 . -5) (undo-tree-id989 . -5)) (25442 24234 333392 110000) 0 nil])
([nil nil ((1024 . 1033)) nil (25442 24321 582292 963000) 0 nil])
nil
([nil nil ((1034 . 1035)) nil (25442 24321 582287 864000) 0 nil])
([nil nil ((1038 . 1041) (#("     " 0 5 (fontified t)) . -1038) (1035 . 1037)) nil (25442 24321 582281 998000) 0 nil])
([nil nil ((1452 . 1457) (#("   " 0 1 (fontified nil c-is-sws t c-in-sws t) 1 3 (fontified nil c-is-sws t c-in-sws t)) . -1452) (1439 . 1444) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1439) (1395 . 1400) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1395) (1326 . 1331) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1326) (1260 . 1265) (#("   " 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil c-in-sws t c-is-sws t)) . 1260) (1245 . 1250) (#("   " 0 3 (fontified nil c-in-sws t c-is-sws t)) . 1245) (1238 . 1243) (#("   " 0 3 (fontified nil)) . 1238) (1226 . 1231) (#("   " 0 3 (fontified nil)) . -1226) (1219 . 1224) (#("   " 0 3 (fontified nil)) . 1219) (1181 . 1188) (#("     " 0 5 (fontified nil)) . 1181) (1147 . 1152) (#("   " 0 3 (fontified nil)) . 1147) (1107 . 1114) (#("     " 0 5 (fontified nil)) . 1107) (1071 . 1076) (#("   " 0 3 (fontified nil)) . 1071) (1037 . 1042) (#("   " 0 3 (fontified t)) . -1037) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 1036)) nil (25442 24321 582269 566000) 0 nil])
([nil nil ((#("tal / 4);
" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil face (rainbow-delimiters-depth-3-face)) 8 9 (rear-nonsticky t fontified nil) 9 10 (rear-nonsticky t fontified nil)) . 1037) (undo-tree-id1026 . -10) (#("     count = count + (to" 0 5 (fontified t) 5 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t) 23 24 (fontified t)) . -1037) (undo-tree-id1027 . -24) 1061) nil (25442 24321 582248 194000) 0 nil])
([nil nil ((1069 . 1077) (#("       " 0 7 (fontified t)) . -1069) (#("else" 0 4 (fontified t face font-lock-keyword-face)) . -1042) (undo-tree-id1025 . -4) 1046) nil (25442 24321 582235 413000) 0 nil])
([nil nil ((1068 . 1075) (#("        " 0 8 (fontified t)) . -1068) (1037 . 1042) (#("      " 0 5 (fontified t) 5 6 (fontified t)) . 1037) (undo-tree-id1024 . -5) 1042) nil (25442 24321 582224 99000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1186) (#(" " 0 1 (fontified t)) . 1186) (#(" " 0 1 (fontified t)) . 1186) (#(" " 0 1 (fontified t)) . 1186) (#("
" 0 1 (fontified t)) . 1186) (undo-tree-id1023 . -1)) nil (25442 24321 582211 877000) 0 nil])
([nil nil ((1193 . 1194)) nil (25442 24321 582201 261000) 0 nil])
([nil nil ((1200 . 1203) (#("     " 0 5 (fontified nil)) . -1200) (1194 . 1195) (nil rear-nonsticky nil 1197 . 1198) (nil fontified nil 1194 . 1198) (1194 . 1198)) nil (25442 24321 582195 115000) 0 nil])
([nil nil ((1231 . 1236) (#("   " 0 3 (fontified nil)) . -1231) (1194 . 1201) (#("     " 0 5 (fontified t)) . 1194) (nil fontified nil 1227 . 1228) (nil fontified nil 1226 . 1227) (nil fontified nil 1225 . 1226) (nil fontified nil 1224 . 1225) (nil fontified nil 1223 . 1224) (nil fontified nil 1222 . 1223) (nil fontified nil 1221 . 1222) (nil fontified nil 1220 . 1221) (nil fontified nil 1219 . 1220) (nil fontified nil 1218 . 1219) (nil fontified nil 1217 . 1218) (nil fontified nil 1216 . 1217) (nil fontified nil 1215 . 1216) (nil fontified nil 1214 . 1215) (nil fontified nil 1213 . 1214) (nil fontified nil 1212 . 1213) (nil fontified nil 1211 . 1212) (nil fontified nil 1210 . 1211) (nil fontified nil 1209 . 1210) (nil fontified nil 1208 . 1209) (nil fontified nil 1207 . 1208) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1204 . 1205) (nil fontified nil 1199 . 1204) (nil fontified nil 1194 . 1199) (1194 . 1228) (#(" else" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (rear-nonsticky t fontified t face font-lock-keyword-face)) . -1194) (undo-tree-id1021 . -5) (undo-tree-id1022 . -5)) nil (25442 24321 582182 194000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1230) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1)) nil (25442 24321 582148 461000) 0 nil])
([nil nil ((1236 . 1237) (t 25442 24321 822481 631000)) nil (25442 24406 989022 151000) 0 nil])
([nil nil ((1242 . 1245) (#("     " 0 5 (fontified t c-in-sws t c-is-sws t)) . -1242) (1237 . 1240) (1237 . 1238) (#("}" 0 1 (fontified nil)) . -1237) (1237 . 1238)) nil (25442 24406 989015 236000) 0 nil])
([nil nil ((1243 . 1246) (1244 . 1251) (#("   " 0 3 (fontified t c-in-sws t c-is-sws t)) . -1244) (1241 . 1243)) nil (25442 24406 989006 646000) 0 nil])
([nil nil ((1248 . 1253) (#("       " 0 7 (fontified t c-in-sws t c-is-sws t)) . -1248) (1246 . 1247) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1246) (undo-tree-id1045 . -4) (1242 . 1246) 1246) nil (25442 24406 988998 614000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -1132) (undo-tree-id1044 . -1) 1133) nil (25442 24406 988986 951000) 0 nil])
([nil nil ((1132 . 1133)) nil (25442 24406 988977 802000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -1176) (undo-tree-id1043 . -1) 1177) nil (25442 24406 988971 865000) 0 nil])
([nil nil ((1176 . 1177)) nil (25442 24406 988963 205000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1226) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) 1227) nil (25442 24406 988955 592000) 0 nil])
([nil nil ((1226 . 1227)) nil (25442 24406 988906 75000) 0 nil])
([nil nil ((1249 . 1252) (#("     " 0 5 (fontified t c-in-sws t c-is-sws t)) . -1249) (1247 . 1248)) nil (25442 24406 988892 386000) 0 nil])
([nil nil ((1248 . 1253) (#("   " 0 3 (fontified t c-in-sws t c-is-sws t)) . -1248) (#(";" 0 1 (fontified t)) . -1247) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) 1248 (t 25442 24407 92019 686000)) nil (25442 24581 108304 943000) 0 nil])
([nil nil ((1250 . 1253) (#("     " 0 5 (fontified t c-in-sws t c-is-sws t)) . -1250) (1247 . 1249)) nil (25442 24581 108292 162000) 0 nil])
([nil nil ((1249 . 1254) (1248 . 1253)) nil (25442 24581 108285 876000) 0 nil])
([nil nil ((1259 . 1266) (1256 . 1258) (#("   " 0 3 (fontified t)) . -1257) (1254 . 1256)) nil (25442 24581 108279 521000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1257) (undo-tree-id1193 . -1) 1258) nil (25442 24581 108271 768000) 0 nil])
([nil nil ((1257 . 1259)) nil (25442 24581 108263 317000) 0 nil])
([nil nil ((1259 . 1270)) nil (25442 24581 108258 429000) 0 nil])
([nil nil ((1270 . 1272)) nil (25442 24581 108253 540000) 0 nil])
([nil nil ((1271 . 1274)) nil (25442 24581 108248 581000) 0 nil])
([nil nil ((1271 . 1276) (#("tot" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1271) (undo-tree-id1191 . -3) (undo-tree-id1192 . -3) 1274) nil (25442 24581 108242 505000) 0 nil])
([nil nil ((1276 . 1277)) nil (25442 24581 108231 330000) 0 nil])
([nil nil ((1277 . 1278)) nil (25442 24581 108226 232000) 0 nil])
([nil nil ((1278 . 1279)) nil (25442 24581 108221 413000) 0 nil])
([nil nil ((1248 . 1249)) nil (25442 24581 108216 384000) 0 nil])
([nil nil ((1258 . 1265) (#("     " 0 5 (fontified nil)) . -1258) (1249 . 1254) (1249 . 1252)) nil (25442 24581 108210 517000) 0 nil])
([nil nil ((1257 . 1259)) nil (25442 24581 108203 883000) 0 nil])
([nil nil ((1258 . 1262)) nil (25442 24581 108198 854000) 0 nil])
([nil nil ((1258 . 1263) (#("tota" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1258) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (undo-tree-id1183 . -4) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) 1262) nil (25442 24581 108187 51000) 0 nil])
([nil nil ((1263 . 1272)) nil (25442 24581 107989 540000) 0 nil])
([nil nil ((1300 . 1326) (#("                           " 0 27 (fontified t)) . -1300) (#(" " 0 1 (fontified t)) . 1273) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1) (undo-tree-id1124 . 1) (undo-tree-id1125 . 1) (undo-tree-id1126 . 1) (undo-tree-id1127 . 1) (undo-tree-id1128 . 1) (1301 . 1328) (#("                                " 0 32 (fontified t)) . -1301) (#(" " 0 1 (fontified nil)) . 1273) (undo-tree-id1129 . 1) (undo-tree-id1130 . 1) (#(" " 0 1 (fontified nil)) . 1273) (undo-tree-id1131 . 1) (undo-tree-id1132 . 1) (#(" " 0 1 (fontified nil)) . 1273) (undo-tree-id1133 . 1) (undo-tree-id1134 . 1) (#(" " 0 1 (fontified t)) . 1273) (undo-tree-id1135 . 1) (undo-tree-id1136 . 1) (#(" " 0 1 (fontified t)) . 1273) (undo-tree-id1137 . 1) (undo-tree-id1138 . 1) (1306 . 1338) (#("                                 " 0 33 (fontified t)) . -1306) (#(" " 0 1 (fontified t)) . 1273) (undo-tree-id1139 . 1) (1307 . 1340) (#("       " 0 7 (fontified t)) . -1307) (#("
" 0 1 (fontified t)) . 1273) (undo-tree-id1140 . -1)) nil (25442 24581 107978 86000) 0 nil])
([nil nil ((1301 . 1328) (#("                          " 0 26 (fontified t)) . -1301) (1273 . 1274)) nil (25442 24581 107924 168000) 0 nil])
([nil nil ((1299 . 1300)) nil (25442 24581 107918 22000) 0 nil])
([nil nil ((1303 . 1306) (#("                           " 0 27 (fontified t)) . -1303) (1301 . 1302)) nil (25442 24581 107912 365000) 0 nil])
([nil nil ((1302 . 1303)) nil (25442 24581 107906 359000) 0 nil])
([nil nil ((1309 . 1312) (1310 . 1317) (#("   " 0 3 (fontified nil)) . -1310) (1303 . 1308) (1303 . 1304)) nil (25442 24581 107900 562000) 0 nil])
([nil nil ((1312 . 1313) (#(" x" 0 2 (fontified nil)) . -1312) (1312 . 1314) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 1312) (undo-tree-id1087 . -4) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -3) (undo-tree-id1109 . -3) (undo-tree-id1110 . -3) (undo-tree-id1111 . -3) (undo-tree-id1112 . -3) (undo-tree-id1113 . -3) (undo-tree-id1114 . -3) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (1308 . 1312) 1312) nil (25442 24581 107888 340000) 0 nil])
([nil nil ((1315 . 1317) (1316 . 1328) (#("       " 0 7 (fontified t)) . -1316) (1313 . 1315)) nil (25442 24581 107810 327000) 0 nil])
([nil nil ((1317 . 1329)) nil (25442 24581 107803 552000) 0 nil])
([nil nil ((1329 . 1331)) nil (25442 24581 107798 663000) 0 nil])
([nil nil ((1330 . 1332)) nil (25442 24581 107793 635000) 0 nil])
([nil nil ((1330 . 1335) (#("to" 0 1 (fontified t) 1 2 (fontified t)) . -1330) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -2) (undo-tree-id1061 . -2) (undo-tree-id1062 . -2) (undo-tree-id1063 . -2) (undo-tree-id1064 . -2) (undo-tree-id1065 . -2) (undo-tree-id1066 . -2) (undo-tree-id1067 . -2) (undo-tree-id1068 . -2) (undo-tree-id1069 . -2) (undo-tree-id1070 . -2) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -2) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) 1332) nil (25442 24581 107782 740000) 0 nil])
([nil nil ((1335 . 1336)) nil (25442 24581 107678 606000) 0 nil])
([nil nil ((1336 . 1337)) nil (25442 24581 107673 578000) 0 nil])
([nil nil ((1337 . 1339)) nil (25442 24581 107668 479000) 0 nil])
([nil nil ((1340 . 1344)) nil (25442 24581 107663 32000) 0 nil])
([nil nil ((1346 . 1349) (#("            " 0 12 (fontified t)) . -1346) (1344 . 1345)) nil (25442 24581 107649 622000) 0 nil])
([nil nil ((929 . 932) (#("  " 0 2 (fontified nil)) . 929) (932 . 933) (929 . 931) (#("   " 0 3 (fontified t)) . 929) (undo-tree-id1196 . -3) (undo-tree-id1197 . -3) (undo-tree-id1198 . -3) (undo-tree-id1199 . -3) (undo-tree-id1200 . -3) (undo-tree-id1201 . -3) (undo-tree-id1202 . -3) (932 . 933) (t 25442 24581 221076 348000)) nil (25442 24717 829452 360000) 0 nil])
([nil nil ((934 . 935)) nil (25442 24796 663353 997000) 0 nil])
([nil nil ((843 . 844) (t 25442 24717 937002 361000)) nil (25442 24848 596276 919000) 0 nil] [nil nil ((935 . 936) (t 25442 24717 937002 361000)) ((#("p" 0 1 (fontified t face font-lock-comment-face)) . 935)) (25442 24796 657521 621000) 0 nil])
([nil nil ((848 . 850) (937 . 942) (#("   " 0 3 (fontified nil)) . 937) (913 . 920) (#("     " 0 5 (fontified nil)) . 913) (885 . 892) (#("     " 0 5 (fontified nil)) . 885) (868 . 875) (#("     " 0 5 (fontified nil)) . 868) (849 . 854) (#("   " 0 3 (fontified nil)) . -849) (844 . 847) (844 . 845)) nil (25442 24848 596268 468000) 0 nil])
nil
([nil nil ((850 . 852)) nil (25442 24848 596256 804000) 0 nil])
([nil nil ((934 . 937) (#("     " 0 5 (fontified nil)) . 934) (912 . 917) (#("       " 0 7 (fontified nil)) . 912) (886 . 891) (#("       " 0 7 (fontified nil)) . 886) (871 . 876) (#("       " 0 7 (fontified nil)) . 871) (854 . 857) (#("     " 0 5 (fontified t)) . -854) (852 . 853)) nil (25442 24848 596249 261000) 0 nil])
([nil nil ((1028 . 1032)) nil (25442 24848 596237 947000) 0 nil])
([nil current ((1032 . 1033) (#(" x" 0 2 (fontified nil)) . -1032) (1032 . 1034) (#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1032) (undo-tree-id1203 . -4) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -2) (undo-tree-id1212 . -2) (undo-tree-id1213 . -2) (undo-tree-id1214 . -2) (undo-tree-id1215 . -2) (undo-tree-id1216 . -2) (undo-tree-id1217 . -2) (undo-tree-id1218 . -2) (undo-tree-id1219 . -2) (undo-tree-id1220 . -2) (undo-tree-id1221 . -2) (undo-tree-id1222 . -2) (undo-tree-id1223 . -3) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -3) (undo-tree-id1227 . -3) (undo-tree-id1228 . -3) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -3) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (1028 . 1032) 1032) nil (25442 24848 596222 652000) 0 nil])
nil
